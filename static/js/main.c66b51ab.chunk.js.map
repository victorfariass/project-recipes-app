{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/exploreIcon.svg","images/drinkIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","services/API.js","context/globalContext/GlobalContext.js","context/globalContext/GlobalProvider.js","context/userContext/UserContext.js","pages/login/index.js","components/Header/index.js","context/bebidaContext/DrinkContext.js","components/Card/CardDrink.js","serviceWorker.js","components/SearchBar/SearchBarDrink.js","components/footer/index.js","components/CategoryBar/DrinkCategoryBar.js","pages/bebida/index.js","components/Card/CardDrinkDetails.js","components/Carousel/FoodRecomendation.js","pages/bebida/detalhes/index.js","components/Card/CardDrinkInProgress.js","services/LocalStorage.js","pages/bebida/processo/index.js","components/Card/CardFood.js","context/comidaContext/FoodContext.js","components/SearchBar/SearchBarFood.js","components/CategoryBar/FoodCategoryBar.js","pages/comida/index.js","components/Card/CardFoodDetails.js","components/Carousel/DrinkRecomendation.js","pages/comida/detalhes/index.js","components/Card/CardFoodInProgress.js","pages/comida/processo/index.js","pages/explorar/index.js","pages/explorar/comida/index.js","pages/explorar/bebida/index.js","pages/explorar/comida/ingredientes/index.js","pages/explorar/bebida/ingredientes/index.js","pages/explorar/comida/area/index.js","pages/explorar/bebida/area/index.js","pages/perfil/index.js","pages/receitas-feitas/index.js","pages/receitas-favoritas/index.js","context-route/ContextRoute.js","context/userContext/UserProvider.js","context/comidaContext/FoodProvider.js","context/bebidaContext/DrinkProvider.js","routes/index.js","App.js","index.js"],"names":["module","exports","SearchMealByIngredient","ingredient","a","fetch","request","json","SearchMealByName","name","SearchMealByFirstLetter","firstLetter","requestMealRecipe","SearchCocktailByIngredient","SearchCocktailByName","SearchCocktailByFirstLetter","requestDrinkRecipe","requestDrinkId","id","results","requestFoodId","requestIngredientsDrinks","requestIngredientsMeal","requestFoodCategory","requestDrinksCategory","requestDrinksByCategory","category","requestMealsByCategory","drink","food","listAreaFood","area","foodArea","GlobalContext","createContext","GlobalProvider","children","useState","email","setEmail","foodCategory","setFoodCategory","currentCategory","setCurrentCategory","filteredMeals","setFilteredMeals","fetchExploreIngredients","setFetchExploreIngredients","exploreIngredients","setExploreIngredients","handleFilteredMeals","target","categoryName","innerText","length","result","meals","useEffect","fetchData","provide","values","functions","handleEmail","value","handleExploreIngredients","alt","Provider","UserContext","Login","disabled","setDisabled","redirect","setRedirect","useContext","password","handlePassword","emailRegex","test","className","to","htmlFor","data-testid","type","onChange","onClick","user","localStorage","setItem","JSON","stringify","cocktails","Header","explore","component","search","setSearch","searchBar","src","profileIcon","exploreIcon","searchIcon","DrinkContext","CardDrink","drinks","filteredDrinks","data","undefined","map","index","strDrink","strDrinkThumb","idDrink","key","Boolean","window","location","hostname","match","alertSearchRecipeNotFound","alert","alertSearchACaracter","SearchBarFood","searchInput","searchType","handleSearchInput","handleSearchType","setDrinks","path","setPath","requestAPI","response","Footer","drinkIcon","mealIcon","DrinkCategoryBar","drinksCategory","handleFilteredDrinks","strCategory","Bebida","SearchBarDrink","CardDrinkDetails","alreadyFavorited","idDaReceita","detailDrinks","ingredientIndex","push","isCopied","setIsCopied","favorited","setFavorited","ingredients","recipes","parse","getItem","recipeStarted","Object","keys","some","recipeFinished","item","callback","navigator","clipboard","writeText","shareIcon","isFavorited","favorites","newFavorites","filter","foodOrDrink","alcoholicOrNot","strAlcoholic","image","favorite","blackHeartIcon","whiteHeartIcon","srt","strInstructions","newMeals","startRecipe","FoodRecomendation","recomendations","strMeal","strMealThumb","BebidaDetalhes","setDetailsDrinks","setRecomendations","useParams","loading","setLoading","fetchDrink","fetchMeals","obj","CardDrinkInProgress","setDoneRecipe","console","log","date","Date","toLocaleDateString","handleClick","previousDoceRecipes","doneDate","tags","strTags","setLocalStorageDoneRecipesDrinks","disableButton","setDisableButton","checkButton","ingredientList","handleCheckedBox","event","parentNode","checked","BebidaProgresso","CardFood","foods","idMeal","FoodContext","setFoods","FoodCategoryBar","Comida","CardFoodDetails","detailFoods","strArea","strYoutube","DrinkRecomendation","ComidaDetalhes","setDetailsFoods","fetchFood","fetchDrinks","CardFoodInProgress","setLocalStorageDoneRecipesFoods","ComidaProgresso","Explorar","ExplorarComida","idFood","setIdFood","getRandomFood","then","ExplorarBebida","drinkId","setDrinkId","getRandomDrink","ComidaIngredientes","setIngredients","ingredientsImages","setIngredientsImages","mountImage","array","correctPaths","listIngredients","i","strIngredient","fetchIngredients","BebidaIngredientes","strIngredient1","ComidaArea","setArea","selectedArea","setSelectedArea","foodByArea","setFoodByArea","getListAllAreaOfTheFood","includes","getFoodByArea","BebidaArea","Perfil","userEmail","clear","ReceitasFeitas","doneRecipesStorage","doneReceipes","setDoneRecipes","copied","setCopied","filterRecipes","filtered","recipe","style","width","allRecipe","copy","tag","ReceitasFavoritas","favoriteRecipesStorage","favoriteRecipes","setFavoriteRecipes","newFavRecipes","newFavRecipesString","notFavorite","ContextRoute","contextComponent","rest","Component","UserProvider","setPassword","FoodProvider","setSearchInput","setSearchType","doneRecipe","DrinkProvider","setDrinksCategory","setFilteredDrinks","Routes","exact","App","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,kCCA3CD,EAAOC,QAAU,IAA0B,4C,qBCA3CD,EAAOC,QAAU,IAA0B,yC,sBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,uCCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,mMCApC,SAAeC,EAAtB,kC,4CAAO,WAAsCC,GAAtC,iBAAAC,EAAA,sEACiBC,MAAM,wDAAD,OAAyDF,IAD/E,cACCG,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeC,EAAtB,kC,4CAAO,WAAgCC,GAAhC,iBAAAL,EAAA,sEACiBC,MAAM,wDAAD,OAAyDI,IAD/E,cACCH,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeG,EAAtB,kC,4CAAO,WAAuCC,GAAvC,iBAAAP,EAAA,sEACiBC,MAAM,wDAAD,OAAyDM,IAD/E,cACCL,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeK,IAAtB,+B,4CAAO,8BAAAR,EAAA,sEACiBC,MAAM,yDADvB,cACCC,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeM,EAAtB,kC,4CAAO,WAA0CV,GAA1C,iBAAAC,EAAA,sEACiBC,MAAM,4DAAD,OAA6DF,IADnF,cACCG,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeO,EAAtB,kC,4CAAO,WAAoCL,GAApC,iBAAAL,EAAA,sEACiBC,MAAM,4DAAD,OAA6DI,IADnF,cACCH,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeQ,EAAtB,kC,4CAAO,WAA2CJ,GAA3C,iBAAAP,EAAA,sEACiBC,MAAM,4DAAD,OAA6DM,IADnF,cACCL,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeS,IAAtB,+B,4CAAO,8BAAAZ,EAAA,sEACiBC,MAAM,6DADvB,cACCC,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeU,EAAtB,kC,4CAAO,WAA8BC,GAA9B,eAAAd,EAAA,sEACwBC,MAAM,4DAAD,OAA6Da,IAD1F,8BACiGX,OADjG,cACCY,EADD,yBAEEA,GAFF,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAA6BF,GAA7B,eAAAd,EAAA,sEACwBC,MAAM,wDAAD,OAAyDa,IADtF,8BAC6FX,OAD7F,cACCY,EADD,yBAEEA,GAFF,4C,sBAKA,SAAeE,IAAtB,+B,4CAAO,4BAAAjB,EAAA,sEACwBC,MAAM,+DAD9B,8BAC8FE,OAD9F,cACCY,EADD,yBAEEA,GAFF,4C,sBAKA,SAAeG,IAAtB,+B,4CAAO,4BAAAlB,EAAA,sEACwBC,MAAM,2DAD9B,8BAC0FE,OAD1F,cACCY,EADD,yBAEEA,GAFF,4C,sBAKA,SAAeI,IAAtB,+B,4CAAO,8BAAAnB,EAAA,sEACiBC,MAAM,2DADvB,cACCC,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeiB,IAAtB,+B,4CAAO,8BAAApB,EAAA,sEACiBC,MAAM,+DADvB,cACCC,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAekB,EAAtB,kC,4CAAO,WAAuCC,GAAvC,iBAAAtB,EAAA,sEACiBC,MAAM,4DAAD,OAA6DqB,IADnF,cACCpB,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeoB,EAAtB,kC,4CAAO,WAAsCD,GAAtC,iBAAAtB,EAAA,sEACiBC,MAAM,wDAAD,OAAyDqB,IAD/E,cACCpB,EADD,gBAEcA,EAAQC,OAFtB,cAECA,EAFD,yBAGEA,GAHF,4C,kEAMA,4BAAAH,EAAA,sEACsBC,MAAM,0DAD5B,8BACuFE,OADvF,cACCqB,EADD,yBAEEA,GAFF,4C,kEAKA,4BAAAxB,EAAA,sEACqBC,MAAM,sDAD3B,8BACkFE,OADlF,cACCsB,EADD,yBAEEA,GAFF,4C,kEAKA,4BAAAzB,EAAA,sEAC6BC,MAAM,2DADnC,8BAC+FE,OAD/F,cACCuB,EADD,yBAEEA,GAFF,4C,kEAKA,WAA6BC,GAA7B,eAAA3B,EAAA,sEACyBC,MAAM,wDAAD,OAAyD0B,IADvF,8BACgGxB,OADhG,cACCyB,EADD,yBAEEA,GAFF,4C,sBCzGP,IAEeC,EAFOC,0BCmEPC,MAhEf,YAAuC,IAAbC,EAAY,EAAZA,SACxB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA0CN,mBAAS,IAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KAEA,EAA8DR,oBAAS,GAAvE,mBAAOS,EAAP,KAAgCC,EAAhC,KACA,EAAoDV,mBAAS,IAA7D,mBAAOW,EAAP,KAA2BC,EAA3B,KAWMC,EAAmB,uCAAG,iCAAA9C,EAAA,yDAAS+C,EAAT,EAASA,OAEd,SADfC,EAAeD,EAAOE,WADF,yCAESR,EAAiB,KAF1B,UAGG,IAAzBD,EAAcU,QAAgBZ,IAAoBU,EAH5B,wBAIxBT,EAAmBS,GAJK,SAKHzB,EAAuByB,GALpB,OAKlBG,EALkB,OAMxBV,EAAiBU,EAAOC,OANA,wBAQxBX,EAAiB,IARO,4CAAH,sDAYzBY,qBAAU,YACO,uCAAG,4BAAArD,EAAA,sEACKmB,IADL,OACVgC,EADU,OAEhBd,EAAgBc,EAAOC,OAFP,2CAAH,qDAIfE,KACC,IAEH,IAAMC,EAAU,CACdC,OAAQ,CACNtB,QACAE,eACAI,gBACAE,0BACAE,sBAEFa,UAAW,CACTtB,WACAuB,YAvCgB,SAAC,GAAD,IAAGX,EAAH,EAAGA,OAAH,OAAgBZ,EAASY,EAAOY,QAwChDb,sBACAc,yBAtC6B,SAAC,GAAgB,IAAdb,EAAa,EAAbA,OAC5BY,EAAQZ,EAAOc,IAAMd,EAAOc,IAAMd,EAAOE,UAC/CJ,EAAsBc,GAJoBhB,GAA2B,MA2CvE,OACE,kBAAC,EAAcmB,SAAf,CAAwBH,MAAQJ,GAC7BvB,I,OCxDQ+B,EAFKjC,0BC0FLkC,MAvFf,WACE,MAAgC/B,oBAAS,GAAzC,mBAAOgC,EAAP,KAAiBC,EAAjB,KACA,EAAgCjC,oBAAS,GAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAEA,EAOIC,qBAAWN,GALXO,EAFJ,EACEd,OACEc,SAGAC,EALJ,EAIEd,UACEc,eAIJ,EAOIF,qBAAWxC,GALXK,EAFJ,EACEsB,OACEtB,MAGAwB,EALJ,EAIED,UACEC,YA6BJ,OAzBAL,qBAAU,WACR,IAAMmB,EAAa,oCAIfA,EAAWC,KAAKvC,IAAUoC,EAASpB,OAFhB,GAGrBgB,GAAY,KAGTM,EAAWC,KAAKvC,IAAUoC,EAASpB,QANjB,IAOrBgB,GAAY,KAEb,CAAChC,EAAOoC,EAASpB,SAclB,6BAASwB,UAAU,cAChBP,GAAY,kBAAC,IAAD,CAAUQ,GAAG,aAC1B,yBAAKD,UAAU,mBACb,2BAAOE,QAAQ,eACb,qCACA,2BACE9D,GAAG,cACH+D,cAAY,cACZC,KAAK,QACLnB,MAAQzB,EACR6C,SAAWrB,EACXgB,UAAU,iBAGd,2BAAOE,QAAQ,kBACb,qCACA,2BACE9D,GAAG,iBACH+D,cAAY,iBACZC,KAAK,WACLnB,MAAQW,EACRS,SAAWR,EACXG,UAAU,iBAGd,4BACEI,KAAK,SACLD,cAAY,mBACZZ,SAAWA,EACXe,QAzCY,WAClB,IAAMC,EAAO,CAAE/C,SACfgD,aAAaC,QAAQ,aAAc,GACnCD,aAAaC,QAAQ,iBAAkB,GACvCD,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,IAC5CC,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU,KAEvDH,aAAaC,QAAQ,oBAAqBC,KAAKC,UADnC,CAAEC,UAAW,GAAIlC,MAAO,MAEpCgB,GAAY,IAkCNM,UAAU,gBALZ,a,0DCrBOa,OAhDf,YAAmD,IAAjCvD,EAAgC,EAAhCA,SAAUwD,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACnC,EAA4BxD,oBAAS,GAArC,mBAAOyD,EAAP,KAAeC,EAAf,KAEMC,EAAY,WAChBD,GAAWD,IAab,OACE,oCACE,4BAAQhB,UAAU,oBAChB,kBAAC,IAAD,CAAMC,GAAG,WACP,yBACEkB,IAAMC,KACNjC,IAAI,qBACJgB,cAAY,kBACZH,UAAU,0BAGd,wBAAIG,cAAY,cAAc7C,GAEf,UAAZwD,EAAuB,yBACtBK,IAAME,KACNlC,IAAI,uBACJgB,cAAY,oBAzBpB,4BAAQC,KAAK,SAASE,QAAUY,EAAYlB,UAAU,wBACpD,yBACEmB,IAAMG,KACNnC,IAAI,uBACJgB,cAAY,qBAyBba,GAAUD,IC1CFQ,GAFMnE,0BCyCNoE,OAtCf,WACE,MAKI7B,qBAAW4B,IAJbzC,OACE2C,EAFJ,EAEIA,OACAC,EAHJ,EAGIA,eAKEC,EAAkC,IAA1BD,EAAelD,OAAgBiD,EAASC,EAEtD,YAAeE,IAAXH,EAA6B,GAG/B,6BAASzB,UAAU,yBAChB2B,EAAKE,KAAI,WAAuCC,GAAW,IAA/CC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,QACpC,OAAIH,GARO,GAQmB,GAE5B,kBAAC,IAAD,CACEX,IAAMa,EACN/B,GAAE,mBAAegC,GACjBC,IAAMH,EACN5B,cAAA,UAAiB2B,EAAjB,gBACA9B,UAAU,eAEV,yBACEmB,IAAMa,EACN7C,IAAM4C,EACN5B,cAAA,UAAiB2B,EAAjB,eAEF,uBAAG3B,cAAA,UAAiB2B,EAAjB,eAAsCC,SCvBjCI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAwHC,SAASC,KACdC,MAAM,uEAGD,SAASC,KACdD,MAAM,iDC7BOE,OAxGf,WACE,MAWIhD,qBAAW4B,IAXf,IACEzC,OACE8D,EAFJ,EAEIA,YACAC,EAHJ,EAGIA,WACApB,EAJJ,EAIIA,OAJJ,IAME1C,UACE+D,EAPJ,EAOIA,kBACAC,EARJ,EAQIA,iBACAC,EATJ,EASIA,UAIJ,EAAgCzF,oBAAS,GAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KACA,EAAwBnC,oBAAS,GAAjC,mBAAO0F,EAAP,KAAaC,EAAb,KAEAvE,qBAAU,WACc,IAAlB8C,EAAOjD,SACTkB,GAAY,GACZwD,EAAQ,YAAD,OAAazB,EAAO,GAAGQ,aAE/B,CAACR,IAEJ,IAAM0B,EAAU,uCAAG,4BAAA7H,EAAA,2DACE,wBAAfuH,GAAwCD,EAAYpE,OAAS,GADhD,uBAEfkE,KAFe,kBAGR,IAHQ,UAKbU,EAAW,GACI,sBAAfP,EANa,gCAOE9G,EAA2B6G,GAP7B,OAOfQ,EAPe,iBASE,gBAAfP,EATa,kCAUE7G,EAAqB4G,GAVvB,QAUfQ,EAVe,kBAYE,wBAAfP,EAZa,kCAaE5G,EAA4B2G,GAb9B,QAafQ,EAbe,kBAeO,OAApBA,EAAS3B,QAAkC,KAAfoB,EAff,0CAgBRG,EAAUI,EAAS3B,SAhBX,QAkBjBe,KAlBiB,4CAAH,qDAqBhB,OAAI/C,EAAiB,kBAAC,IAAD,CAAUQ,GAAKgD,IAGlC,6BAASjD,UAAU,wBACjB,2BACEI,KAAK,OACLD,cAAY,eACZlB,MAAQ2D,EACRvC,SAAWyC,EACX9C,UAAU,0BAEZ,2BAAOE,QAAQ,qBACb,2BACE9D,GAAG,oBACHgE,KAAK,QACLzE,KAAK,SACLwE,cAAY,0BACZE,SAAW0C,EACX9D,MAAM,oBACNe,UAAU,2BARd,0BAYA,2BAAOE,QAAQ,eACb,2BACE9D,GAAG,cACHgE,KAAK,QACLzE,KAAK,SACLwE,cAAY,oBACZE,SAAW0C,EACX9D,MAAM,cACNe,UAAU,2BARd,mBAYA,2BAAOE,QAAQ,uBACb,2BACE9D,GAAG,sBACHgE,KAAK,QACLzE,KAAK,SACLwE,cAAY,4BACZE,SAAW0C,EACX9D,MAAM,sBACNe,UAAU,2BARd,8BAYA,4BACEG,cAAY,kBACZC,KAAK,SACLE,QAAU6C,EACVnD,UAAU,gBAJZ,c,8CC/FS,SAASqD,KACtB,OACE,4BAAQlD,cAAY,SAASH,UAAU,UACrC,kBAAC,IAAD,CAAMmB,IAAMmC,KAAYrD,GAAG,WAAWE,cAAY,qBAChD,yBACEhB,IAAI,GACJgC,IAAMmC,QAGV,kBAAC,IAAD,CAAMnC,IAAME,KAAcpB,GAAG,YAAYE,cAAY,sBACnD,yBACEhB,IAAI,GACJgC,IAAME,QAGV,kBAAC,IAAD,CAAMF,IAAMoC,KAAWtD,GAAG,WAAWE,cAAY,mBAC/C,yBACEhB,IAAI,GACJgC,IAAMoC,SCgBDC,OAtCf,WACE,MAGI7D,qBAAW4B,IAFHkC,EADZ,EACE3E,OAAU2E,eACGC,EAFf,EAEE3E,UAAa2E,qBAIf,OACE,yBAAK1D,UAAU,2BACb,4BACEI,KAAK,SACL8B,IAAI,MACJ/B,cAAY,sBACZH,UAAU,eACVM,QAAUoD,GALZ,OASCD,EAAe5B,KAAI,WAAkBC,GAAW,IAA1B6B,EAAyB,EAAzBA,YACrB,OAAI7B,GAdY,EAeP,GAGP,4BACE1B,KAAK,SACL8B,IAAMyB,EACNxD,cAAA,UAAiBwD,EAAjB,oBACA3D,UAAU,eACVM,QAAUoD,GAETC,QCfEC,OAXf,WACE,OACE,iCACE,kBAAC,GAAD,CAAQ7C,UAAY,kBAAC8C,GAAD,OAApB,WACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACR,GAAD,Q,sFCmHSS,OA5Ff,YASE,IAT4D,IAAlCC,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,YAGxCC,EAEAtE,qBAAW4B,IAHbzC,OACEmF,aAKEC,EAAkB,GACfpC,EAAQ,EAAGA,EAFI,GAEqBA,GAAS,EACpDoC,EAAgBC,KAAKrC,GAGvB,MAAgCvE,oBAAS,GAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAAkC9G,mBAASwG,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,EAAgChH,oBAAS,GAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAEM8E,EAAc,GACdC,EAAU/D,KAAKgE,MAAMlE,aAAamE,QAAQ,sBAC1CC,EAAgBC,OAAOC,KAAKL,EAAQ7D,WAAWmE,MAAK,SAAC3I,GAAD,OAAQA,IAAO4H,KAQnEgB,EADctE,KAAKgE,MAAMlE,aAAamE,QAAQ,gBACjBI,MAAK,SAACE,GAAD,OAAUA,EAAK7I,KAAO4H,KAE9D,OAAIvE,EAAiB,kBAAC,IAAD,CAAUQ,GAAE,mBAAe+D,EAAf,kBAG/B,iCACGC,GAAgBA,EAAapC,KAAI,SAACoD,GAAD,OAChC,yBAAK/C,IAAM+C,EAAKlD,SAAW/B,UAAU,gBACnC,yBACEmB,IAAM8D,EAAKjD,cACX7C,IAAM8F,EAAKlD,SACX5B,cAAY,iBAEd,wBAAIA,cAAY,gBAAgB8E,EAAKlD,UACrC,2BACE3B,KAAK,QACLD,cAAY,YACZG,QAAU,WAxEtB,IAAyBlE,EAAI8I,EAAJ9I,EAwEqB4H,EAxEjBkB,EAwE8Bb,EAvEzDc,UAAUC,UAAUC,UAApB,wCAA+DjJ,IAC/D8I,GAAS,IAuEC/D,IAAMmE,KACNnG,IAAI,UAELiF,GAAY,4CACb,2BACEhE,KAAK,QACLD,cAAY,eACZG,QAAU,YA3EtB,SAAkBiF,EAAaL,EAAUD,GACvC,IAAMO,EAAY9E,KAAKgE,MAAMlE,aAAamE,QAAQ,oBAClD,GAAIY,EAAa,CACf,IAAME,EAAeD,EAClBE,QAAO,SAACC,GAAD,OAAiBA,EAAYvJ,KAAO6I,EAAKhD,WACnDiD,GAAS,GACT1E,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU8E,QAClD,CACL,IAAMA,EAAY,uBAAOD,GAAP,CAAkB,CAClCpJ,GAAI6I,EAAKhD,QACT7B,KAAM,SACNnD,KAAM,GACNL,SAAUqI,EAAKtB,YACfiC,eAAgBX,EAAKY,aACrBlK,KAAMsJ,EAAKlD,SACX+D,MAAOb,EAAKjD,iBAEdkD,GAAS,GACT1E,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU8E,KAyD7BM,CAASzB,EAAWC,EAAcU,IACpD9D,IAAOmD,EAAa0B,KAAiBC,KACrC9G,IAAI,UAEN,uBAAGgB,cAAY,mBAAmB8E,EAAKY,cACvC,4BACG3B,EAAgBrC,KAAI,SAACC,GACpB,IAAMoE,EAAG,UAAMjB,EAAK,aAAD,OAAcnD,EAAQ,KACzC,MAAY,SAARoE,GAA0B,KAARA,GAAsB,MAARA,EAAoB,IACxD1B,EAAYL,KAAZ,UAAoB+B,EAApB,YAA2BjB,EAAK,gBAAD,OAAiBnD,EAAQ,MAEtD,wBAAII,IAAMJ,EAAQ3B,cAAA,UAAiB2B,EAAjB,iCAAlB,UACMoE,EADN,YACajB,EAAK,gBAAD,OAAiBnD,EAAQ,WAKhD,uBAAG3B,cAAY,gBAAgB8E,EAAKkB,sBAGtCnB,GAEA,4BACE5E,KAAK,SACLE,QAAU,YAxDlB,WACE,IAAM8F,EAAQ,6BAAQ3B,GAAR,IAAiB7D,UAAU,gBAAIoD,EAAcQ,KAC3DhE,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUyF,IACzD1G,GAAY,GAqDY2G,IAClBrG,UAAU,4BACVG,cAAY,oBAEVyE,EAAiB,oBAAsB,qBCjFpC0B,OAhCf,WACE,IAEIC,EAEA5G,qBAAW4B,IAHbzC,OACEyH,eAMJ,OACE,yBAAKvG,UAAU,kBACZuG,EAAe1E,KAAI,SAACoD,EAAMnD,GACzB,OAAIA,GALiB,EAKmB,GAEtC,yBACEI,IAAM+C,EAAKuB,QACXxG,UAAU,sBACVG,cAAA,UAAiB2B,EAAjB,wBAEA,yBACEX,IAAM8D,EAAKwB,aACXtH,IAAM8F,EAAKuB,QACXrG,cAAA,UAAiB2B,EAAjB,eAEF,uBAAG3B,cAAA,UAAiB2B,EAAjB,yBAAgDmD,EAAKuB,eC0CrDE,OA/Df,WACE,MAKI/G,qBAAW4B,IAJbxC,UACE4H,EAFJ,EAEIA,iBACAC,EAHJ,EAGIA,kBAII5C,EAAgB6C,cAAhB7C,YACR,EAA8BzG,oBAAS,GAAvC,mBAAOuJ,EAAP,KAAgBC,EAAhB,KAEApI,qBAAU,WAIR,GAHgD,OAA5C6B,aAAamE,QAAQ,oBACvBnE,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU,KAEP,OAA9CH,aAAamE,QAAQ,qBAA+B,CAEtDnE,aAAaC,QAAQ,oBAAqBC,KAAKC,UADnC,CAAEC,UAAW,GAAIlC,MAAO,MAGM,OAAxC8B,aAAamE,QAAQ,gBACvBnE,aAAaC,QAAQ,cAAeC,KAAKC,UAAU,KAErDoG,GAAW,KACV,IAEHpI,qBAAU,YACQ,uCAAG,4BAAArD,EAAA,sEACKa,EAAe6H,GADpB,OACXxI,EADW,OAEjBmL,EAAiBnL,EAAQiG,QAFR,2CAAH,qDAIhBuF,KACC,CAACL,EAAkB3C,IAEtBrF,qBAAU,YACQ,uCAAG,4BAAArD,EAAA,sEACKQ,IADL,OACXN,EADW,OAEjBoL,EAAkBpL,EAAQkD,OAFT,2CAAH,qDAIhBuI,KACC,CAACL,IAEJ,IAAI7C,GAAmB,EAMvB,OALIrD,KAAKgE,MAAkD,OAA5ClE,aAAamE,QAAQ,sBAElCZ,EADkBrD,KAAKgE,MAAMlE,aAAamE,QAAQ,oBACrBI,MAAK,SAACmC,GAAD,OAASA,EAAI9K,KAAO4H,MAItD,kCACI8C,GAEA,oCACE,kBAAC,GAAD,CACE/C,iBAAmBA,EACnBC,YAAcA,IAEhB,kBAAC,GAAD,SCuGKmD,OAjIf,YAAiE,IAAlCpD,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,YAC/C,EAOIrE,qBAAW4B,IALX0C,EAFJ,EACEnF,OACEmF,aAGAmD,EALJ,EAIErI,UACEqI,cAIJC,QAAQC,IAAIrD,GA0BZ,IAzBA,IAAMsD,GAAO,IAAIC,MAAOC,qBAExB,EAAgClK,oBAAS,GAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAEMgI,EAAc,YCpDf,SAA0CzD,EAAcsD,GAC7D,IAAMI,EAAsBjH,KAAKgE,MAAMlE,aAAamE,QAAQ,gBACxDgD,EACFnH,aAAaC,QAAQ,cAAeC,KAAKC,UAAL,uBAC9BgH,GAD8B,CAEhC,CACEvL,GAAI6H,EAAa,GAAGhC,QACpB7B,KAAM,SACNnD,KAAM,GACNL,SAAUqH,EAAa,GAAGN,YAC1BiC,eAAgB3B,EAAa,GAAG4B,aAChClK,KAAMsI,EAAa,GAAGlC,SACtB+D,MAAO7B,EAAa,GAAGjC,cACvB4F,SAAUL,EACVM,KAAM,CAAC5D,EAAa,GAAG6D,cAK7BtH,aAAaC,QAAQ,cAAeC,KAAKC,UACvC,CACE,CACEvE,GAAI6H,EAAa,GAAGhC,QACpB7B,KAAM,SACNnD,KAAM,GACNL,SAAUqH,EAAa,GAAGN,YAC1BiC,eAAgB3B,EAAa,GAAG4B,aAChClK,KAAMsI,EAAa,GAAGlC,SACtB+D,MAAO7B,EAAa,GAAGjC,cACvB4F,SAAUL,EACVM,KAAM,CAAC5D,EAAa,GAAG6D,aDuB7BC,CAAiC9D,EAAcsD,GAC/CH,EAAcnD,EAAalC,UAC3BrC,GAAY,IAGd,EAA0CnC,oBAAS,GAAnD,mBAAOyK,EAAP,KAAsBC,EAAtB,KAEIC,EAAc,EACdC,EAAiB,EAWfjE,EAAkB,GACfpC,EAAQ,EAAGA,EAFI,GAEqBA,GAAS,EACpDoC,EAAgBC,KAAKrC,GAGvB,IAAMsG,EAAmB,SAACC,GACxB,IAAQC,EAAeD,EAAMhK,OAArBiK,WACYD,EAAMhK,OAAlBkK,SAEND,EAAWtI,UAAY,kBACvBkI,GAAe,IAEfI,EAAWtI,UAAY,mBACvBkI,GAAe,GApBfD,EADEC,IAAgBC,IA0BtB,EAAgC5K,oBAAS,GAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAAkC9G,mBAASwG,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,OAAI9E,EAAiB,kBAAC,IAAD,CAAUQ,GAAG,qBAGhC,iCACGgE,EAAapC,KAAI,SAACoD,GAAD,OAChB,yBAAK/C,IAAM+C,EAAKlD,SAAW/B,UAAU,gBACnC,yBACEmB,IAAM8D,EAAKjD,cACX7C,IAAM8F,EAAKlD,SACX5B,cAAY,iBAEd,wBAAIA,cAAY,gBAAgB8E,EAAKlD,UACrC,2BACE3B,KAAK,QACLD,cAAY,YACZG,QAAU,WAlGtB,IAAyBlE,EAAI8I,EAAJ9I,EAkGqB4H,EAlGjBkB,EAkG8Bb,EAjGzDc,UAAUC,UAAUC,UAApB,wCAA+DjJ,IAC/D8I,GAAS,IAiGC/D,IAAMmE,KACNnG,IAAI,UAELiF,GAAY,4CACb,2BACEhE,KAAK,QACLD,cAAY,eACZG,QAAU,YArGtB,SAAkBiF,EAAaL,EAAUD,GACvC,IAAMO,EAAY9E,KAAKgE,MAAMlE,aAAamE,QAAQ,oBAClD,GAAIY,EAAa,CACf,IAAME,EAAeD,EAClBE,QAAO,SAACC,GAAD,OAAiBA,EAAYvJ,KAAO6I,EAAKhD,WACnDiD,GAAS,GACT1E,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU8E,QAClD,CACL,IAAMA,EAAY,uBAAOD,GAAP,CAAkB,CAClCpJ,GAAI6I,EAAKhD,QACT7B,KAAM,SACNnD,KAAM,GACNL,SAAUqI,EAAKtB,YACfiC,eAAgBX,EAAKY,aACrBlK,KAAMsJ,EAAKlD,SACX+D,MAAOb,EAAKjD,iBAEdkD,GAAS,GACT1E,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU8E,KAmF7BM,CAASzB,EAAWC,EAAcU,IACpD9D,IAAOmD,EAAa0B,KAAiBC,KACrC9G,IAAI,UAEN,uBAAGgB,cAAY,mBAAmB8E,EAAKY,cACvC,wBAAI7F,UAAU,iBACXkE,EAAgBrC,KAAI,SAACC,GACpB,IAAMoE,EAAG,UAAMjB,EAAK,aAAD,OAAcnD,EAAQ,KACzC,MAAY,SAARoE,GAA0B,KAARA,GAAsB,MAARA,EAAoB,IACxDiC,GAAkB,EAEhB,wBACEjG,IAAMJ,EACN3B,cAAA,UAAiB2B,EAAjB,oBACA9B,UAAU,oBAEV,2BACEI,KAAK,WACL8B,IAAMJ,EACN7C,MAAQgG,EAAK,aAAD,OAAcnD,EAAQ,IAClCxB,QAAU8H,IAGX,UAAGnD,EAAK,aAAD,OAAcnD,EAAQ,KAA7B,WACKmD,EAAK,gBAAD,OAAiBnD,EAAQ,WAK3C,uBAAG3B,cAAY,gBAAgB8E,EAAKkB,iBACpC,4BACE/F,KAAK,SACLD,cAAY,oBACZH,UAAU,iCACVT,SAAWyI,EACX1H,QAAU,kBAAMoH,MALlB,2BE9FKc,OA9Cf,WACE,IAEI7B,EAEAhH,qBAAW4B,IAHbxC,UACE4H,iBAII3C,EAAgB6C,cAAhB7C,YAERrF,qBAAU,YACQ,uCAAG,4BAAArD,EAAA,sEACKa,EAAe6H,GADpB,OACXxI,EADW,OAEjBmL,EAAiBnL,EAAQiG,QAFR,2CAAH,qDAIhBuF,KACC,CAACL,EAAkB3C,IAEtBrF,qBAAU,WAIR,GAHgD,OAA5C6B,aAAamE,QAAQ,oBACvBnE,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU,KAEP,OAA9CH,aAAamE,QAAQ,qBAA+B,CAEtDnE,aAAaC,QAAQ,oBAAqBC,KAAKC,UADnC,CAAEC,UAAW,GAAIlC,MAAO,MAGO,OAAzC8B,aAAamE,QAAQ,iBACvBnE,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU,OAErD,IAEH,IAAIoD,GAAmB,EAMvB,OALIrD,KAAKgE,MAAkD,OAA5ClE,aAAamE,QAAQ,sBAElCZ,EADkBrD,KAAKgE,MAAMlE,aAAamE,QAAQ,oBACrBI,MAAK,SAACmC,GAAD,OAASA,EAAI9K,KAAO4H,MAItD,iCACE,kBAAC,GAAD,CACED,iBAAmBA,EACnBC,YAAcA,MCEPyE,OAzCf,YAA8B,IAAVC,EAAS,EAATA,MAGd5K,EAEA6B,qBAAWxC,GAHb2B,OACEhB,cAKE6D,EAAiC,IAAzB7D,EAAcU,OAAgBkK,EAAQ5K,EAEpD,YAAc8D,IAAV8G,EAA4B,GAG9B,6BAAS1I,UAAU,yBAChB2B,EAAKE,KAAI,WAAoCC,GAAW,IAA5C0E,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,aAAckC,EAAoB,EAApBA,OAClC,OAAI7G,GARO,GAQmB,GAE5B,kBAAC,IAAD,CACEX,IAAMsF,EACNxG,GAAE,mBAAe0I,GACjBzG,IAAMsE,EACNrG,cAAA,UAAiB2B,EAAjB,gBACA9B,UAAU,eAEV,yBACEmB,IAAMsF,EACNtH,IAAMqH,EACNrG,cAAA,UAAiB2B,EAAjB,eAEF,uBAAG3B,cAAA,UAAiB2B,EAAjB,eAAsC0E,SChCtCoC,GAFKxL,0BC6GLuF,OArGf,WACE,MAWIhD,qBAAWiJ,IAXf,IACE9J,OACE8D,EAFJ,EAEIA,YACAC,EAHJ,EAGIA,WACA6F,EAJJ,EAIIA,MAJJ,IAME3J,UACE+D,EAPJ,EAOIA,kBACAC,EARJ,EAQIA,iBACA8F,EATJ,EASIA,SAIJ,EAAgCtL,oBAAS,GAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KACA,EAAwBnC,oBAAS,GAAjC,mBAAO0F,EAAP,KAAaC,EAAb,KAEAvE,qBAAU,WACa,IAAjB+J,EAAMlK,SACRkB,GAAY,GACZwD,EAAQ,YAAD,OAAawF,EAAM,GAAGC,YAE9B,CAACD,IAEJ,IAAMvF,EAAU,uCAAG,4BAAA7H,EAAA,2DACE,wBAAfuH,GAAwCD,EAAYpE,OAAS,GADhD,uBAEfkE,KAFe,kBAGR,IAHQ,UAKbU,EAAW,GACI,sBAAfP,EANa,gCAOEzH,EAAuBwH,GAPzB,OAOfQ,EAPe,iBASE,gBAAfP,EATa,kCAUEnH,EAAiBkH,GAVnB,QAUfQ,EAVe,kBAYE,wBAAfP,EAZa,kCAaEjH,EAAwBgH,GAb1B,QAafQ,EAbe,kBAeM,OAAnBA,EAAS1E,OAAiC,KAAfmE,EAfd,0CAgBRgG,EAASzF,EAAS1E,QAhBV,QAkBjB8D,KAlBiB,4CAAH,qDAqBhB,OAAI/C,EAAiB,kBAAC,IAAD,CAAUQ,GAAKgD,IAGlC,6BAASjD,UAAU,wBACjB,2BACEI,KAAK,OACLD,cAAY,eACZlB,MAAQ2D,EACRvC,SAAWyC,EACX9C,UAAU,gBAEZ,2BAAOE,QAAQ,qBACb,2BACE9D,GAAG,oBACHgE,KAAK,QACLzE,KAAK,SACLwE,cAAY,0BACZE,SAAW0C,EACX9D,MAAM,sBAPV,0BAWA,2BAAOiB,QAAQ,eACb,2BACE9D,GAAG,cACHgE,KAAK,QACLzE,KAAK,SACLwE,cAAY,oBACZE,SAAW0C,EACX9D,MAAM,gBAPV,mBAWA,2BAAOiB,QAAQ,uBACb,2BACE9D,GAAG,sBACHgE,KAAK,QACLzE,KAAK,SACLwE,cAAY,4BACZE,SAAW0C,EACX9D,MAAM,wBAPV,8BAWA,4BACEkB,cAAY,kBACZC,KAAK,SACLE,QAAU6C,EACVnD,UAAU,gBAJZ,cCzDS8I,OAvCf,WACE,MAGInJ,qBAAWxC,GAFHO,EADZ,EACEoB,OAAUpB,aACGU,EAFf,EAEEW,UAAaX,oBAKf,OACE,yBAAK4B,UAAU,2BACb,4BACEI,KAAK,SACL8B,IAAI,MACJ/B,cAAY,sBACZH,UAAU,eACVM,QAAUlC,GALZ,OASCV,EAAamE,KAAI,WAAkBC,GAAW,IAA1B6B,EAAyB,EAAzBA,YACnB,OAAI7B,GAdY,EAeP,GAGP,4BACE1B,KAAK,SACL8B,IAAMyB,EACNxD,cAAA,UAAiBwD,EAAjB,oBACA3D,UAAU,eACVM,QAAUlC,GAETuF,QCTEoF,OAjBf,WACE,MAKIpJ,qBAAWiJ,IAJb9J,OACE4J,EAFJ,EAEIA,MACA5K,EAHJ,EAGIA,cAGJ,OACE,iCACE,kBAAC,GAAD,CAAQiD,UAAY,kBAAC,GAAD,OAApB,WACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAU2H,MAAQA,EAAQ5K,cAAgBA,IAC1C,kBAACuF,GAAD,QC6GS2F,OA7Ff,YASE,IAT2D,IAAlCjF,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,YAGvCiF,EAEAtJ,qBAAWiJ,IAHb9J,OACEmK,YAKE/E,EAAkB,GACfpC,EAAQ,EAAGA,EAFI,GAEqBA,GAAS,EACpDoC,EAAgBC,KAAKrC,GAGvB,MAAgCvE,oBAAS,GAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAAkC9G,mBAASwG,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,EAAgChH,oBAAS,GAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAEM8E,EAAc,GACdC,EAAU/D,KAAKgE,MAAMlE,aAAamE,QAAQ,sBAC1CC,EAAgBC,OAAOC,KAAKL,EAAQ/F,OAAOqG,MAAK,SAAC3I,GAAD,OAAQA,IAAO4H,KAQ/DgB,EADctE,KAAKgE,MAAMlE,aAAamE,QAAQ,gBACjBI,MAAK,SAACE,GAAD,OAAUA,EAAK7I,KAAO4H,KAE9D,OAAIvE,EAAiB,kBAAC,IAAD,CAAUQ,GAAE,mBAAe+D,EAAf,kBAG/B,iCACGiF,EAAYpH,KAAI,SAACoD,GAAD,OACf,yBAAK/C,IAAM+C,EAAKuB,QAAUxG,UAAU,gBAClC,yBACEmB,IAAM8D,EAAKwB,aACXtH,IAAM8F,EAAKuB,QACXrG,cAAY,iBAEd,wBAAIA,cAAY,gBAAgB8E,EAAKuB,SACrC,2BACEpG,KAAK,QACLD,cAAY,YACZG,QAAU,WAxEtB,IAAyBlE,EAAI8I,EAAJ9I,EAwEqB4H,EAxEjBkB,EAwE8Bb,EAvEzDc,UAAUC,UAAUC,UAApB,wCAA+DjJ,IAC/D8I,GAAS,IAuEC/D,IAAMmE,KACNnG,IAAI,UAELiF,GAAY,4CACb,2BACEhE,KAAK,QACLD,cAAY,eACZG,QAAU,YA3EtB,SAAkBiF,EAAaL,EAAUD,GACvC,IAAMO,EAAY9E,KAAKgE,MAAMlE,aAAamE,QAAQ,oBAClD,GAAIY,EAAa,CACf,IAAME,EAAeD,EAClBE,QAAO,SAACC,GAAD,OAAiBA,EAAYvJ,KAAO6I,EAAK0D,UACnDzD,GAAS,GACT1E,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU8E,QAClD,CACL,IAAMA,EAAY,uBAAOD,GAAP,CAAkB,CAClCpJ,GAAI6I,EAAK0D,OACTvI,KAAM,SACNnD,KAAMgI,EAAKiE,QACXtM,SAAUqI,EAAKtB,YACfiC,eAAgB,GAChBjK,KAAMsJ,EAAKuB,QACXV,MAAOb,EAAKwB,gBAEdvB,GAAS,GACT1E,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU8E,KAyD7BM,CAASzB,EAAWC,EAAcU,IACpD9D,IAAOmD,EAAa0B,KAAiBC,KACrC9G,IAAI,UAEN,uBAAGgB,cAAY,mBAAmB8E,EAAKtB,aACvC,4BACGO,EAAgBrC,KAAI,SAACC,GACpB,IAAMoE,EAAG,UAAMjB,EAAK,aAAD,OAAcnD,EAAQ,KACzC,MAAY,SAARoE,GAA0B,KAARA,GAAsB,MAARA,EAAoB,IACxD1B,EAAYL,KAAZ,UAAoB+B,EAApB,YAA2BjB,EAAK,gBAAD,OAAiBnD,EAAQ,MAEtD,wBAAII,IAAMJ,EAAQ3B,cAAA,UAAiB2B,EAAjB,iCAAlB,UACMoE,EADN,YACajB,EAAK,gBAAD,OAAiBnD,EAAQ,WAKhD,uBAAG3B,cAAY,gBAAgB8E,EAAKkB,iBACpC,uBAAGhG,cAAY,SAAS8E,EAAKkE,iBAG/BnE,GAEA,4BACE5E,KAAK,SACLE,QAAU,YAzDlB,WACE,IAAM8F,EAAQ,6BAAQ3B,GAAR,IAAiB/F,MAAM,gBAAIsF,EAAcQ,KACvDhE,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUyF,IACzD1G,GAAY,GAsDY2G,IAClBrG,UAAU,4BACVG,cAAY,oBAEVyE,EAAiB,oBAAsB,qBChFpCwE,OAlCf,WACE,IAEI7C,EAEA5G,qBAAWiJ,IAHb9J,OACEyH,eAMJ,OACE,yBAAKvG,UAAU,kBACZuG,EAAe1E,KAAI,SAACoD,EAAMnD,GACzB,OAAIA,GALiB,EAKmB,GAEtC,yBACEI,IAAM+C,EAAKlD,SACX/B,UAAU,sBACVG,cAAA,UAAiB2B,EAAjB,wBAEA,yBACEX,IAAM8D,EAAKjD,cACX7C,IAAM8F,EAAKlD,SACX5B,cAAA,UAAiB2B,EAAjB,eAEF,uBAAG3B,cAAA,UAAiB2B,EAAjB,yBACAmD,EAAKlD,gBCyCLsH,OA/Df,WACE,MAKI1J,qBAAWiJ,IAJb7J,UACEuK,EAFJ,EAEIA,gBACA1C,EAHJ,EAGIA,kBAII5C,EAAgB6C,cAAhB7C,YACR,EAA8BzG,oBAAS,GAAvC,mBAAOuJ,EAAP,KAAgBC,EAAhB,KAEApI,qBAAU,WAIR,GAHgD,OAA5C6B,aAAamE,QAAQ,oBACvBnE,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU,KAEP,OAA9CH,aAAamE,QAAQ,qBAA+B,CAEtDnE,aAAaC,QAAQ,oBAAqBC,KAAKC,UADnC,CAAEC,UAAW,GAAIlC,MAAO,MAGM,OAAxC8B,aAAamE,QAAQ,gBACvBnE,aAAaC,QAAQ,cAAeC,KAAKC,UAAU,KAErDoG,GAAW,KACV,IAEHpI,qBAAU,YACO,uCAAG,4BAAArD,EAAA,sEACMgB,EAAc0H,GADpB,OACVxI,EADU,OAEhB8N,EAAgB9N,EAAQkD,OAFR,2CAAH,qDAIf6K,KACC,CAACD,EAAiBtF,IAErBrF,qBAAU,YACS,uCAAG,4BAAArD,EAAA,sEACIY,IADJ,OACZV,EADY,OAElBoL,EAAkBpL,EAAQiG,QAFR,2CAAH,qDAIjB+H,KACC,CAAC5C,IAEJ,IAAI7C,GAAmB,EAMvB,OALIrD,KAAKgE,MAAkD,OAA5ClE,aAAamE,QAAQ,sBAElCZ,EADkBrD,KAAKgE,MAAMlE,aAAamE,QAAQ,oBACrBI,MAAK,SAACmC,GAAD,OAASA,EAAI9K,KAAO4H,MAItD,kCACI8C,GAEA,oCACE,kBAAC,GAAD,CACE/C,iBAAmBA,EACnBC,YAAcA,IAEhB,kBAAC,GAAD,SCkIKyF,OAnJf,YAkCE,IAlC8D,IAAlC1F,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,YAC9C,EAOIrE,qBAAWiJ,IALXK,EAFJ,EACEnK,OACEmK,YAGA7B,EALJ,EAIErI,UACEqI,cAGEG,GAAO,IAAIC,MAAOC,qBAExB,EAAgClK,oBAAS,GAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAEMgI,EAAc,YVtBf,SAAyCuB,EAAa1B,GAC3D,IAAMI,EAAsBjH,KAAKgE,MAAMlE,aAAamE,QAAQ,gBACrDgD,EACLnH,aAAaC,QAAQ,cAAeC,KAAKC,UAAL,uBAC9BgH,GAD8B,CAEhC,CACEvL,GAAI6M,EAAY,GAAGN,OACnBvI,KAAM,SACNnD,KAAMgM,EAAY,GAAGC,QACrBtM,SAAUqM,EAAY,GAAGtF,YACzBiC,eAAgB,GAChBjK,KAAMsN,EAAY,GAAGzC,QACrBV,MAAOmD,EAAY,GAAGxC,aACtBmB,SAAUL,EACVM,KAAM,CAACoB,EAAY,GAAGnB,cAIzBtH,aAAaC,QAAQ,cAAeC,KAAKC,UAC5C,CACE,CACEvE,GAAI6M,EAAY,GAAGN,OACnBvI,KAAM,SACNnD,KAAMgM,EAAY,GAAGC,QACrBtM,SAAUqM,EAAY,GAAGtF,YACzBiC,eAAgB,GAChBjK,KAAMsN,EAAY,GAAGzC,QACrBV,MAAOmD,EAAY,GAAGxC,aACtBmB,SAAUL,EACVM,KAAM,CAACoB,EAAY,GAAGnB,aUN1B4B,CAAgCT,EAAa1B,GAC7CH,EAAc6B,EAAYzC,SAC1B9G,GAAY,IAGd,EAA0CnC,oBAAS,GAAnD,mBAAOyK,EAAP,KAAsBC,EAAtB,KAEIC,EAAc,EACdC,EAAiB,EAWfjE,EAAkB,GACfpC,EAAQ,EAAGA,EAFI,GAEqBA,GAAS,EACpDoC,EAAgBC,KAAKrC,GAgBvB,IAAMsG,EAAmB,SAACC,GACxB,IAAQC,EAAeD,EAAMhK,OAArBiK,WACYD,EAAMhK,OAAlBkK,SAEND,EAAWtI,UAAY,kBACvBkI,GAAe,IAKfI,EAAWtI,UAAY,mBACvBkI,GAAe,GApCfD,EADEC,IAAgBC,IA6CtB,EAAgC5K,oBAAS,GAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAAkC9G,mBAASwG,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,OAAI9E,EAAiB,kBAAC,IAAD,CAAUQ,GAAG,qBAGhC,iCACGgJ,EAAYpH,KAAI,SAACoD,GAAD,OACf,yBAAK/C,IAAM+C,EAAKuB,QAAUxG,UAAU,gBAClC,yBACEmB,IAAM8D,EAAKwB,aACXtH,IAAM8F,EAAKuB,QACXrG,cAAY,iBAEd,wBAAIA,cAAY,gBAAgB8E,EAAKuB,SACrC,2BACEpG,KAAK,QACLD,cAAY,YACZG,QAAU,WA5HtB,IAAyBlE,EAAI8I,EAAJ9I,EA4HqB4H,EA5HjBkB,EA4H8Bb,EA3HzDc,UAAUC,UAAUC,UAApB,wCAA+DjJ,IAC/D8I,GAAS,IA2HC/D,IAAMmE,KACNnG,IAAI,UAELiF,GAAY,4CACb,2BACEhE,KAAK,QACLD,cAAY,eACZG,QAAU,YAtHtB,SAAkBiF,EAAaL,EAAUD,GACvC,IAAMO,EAAY9E,KAAKgE,MAAMlE,aAAamE,QAAQ,oBAClD,GAAIY,EAAa,CACf,IAAME,EAAeD,EAClBE,QAAO,SAACC,GAAD,OAAiBA,EAAYvJ,KAAO6I,EAAK0D,UACnDzD,GAAS,GACT1E,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU8E,QAClD,CACL,IAAMA,EAAY,uBAAOD,GAAP,CAAkB,CAClCpJ,GAAI6I,EAAK0D,OACTvI,KAAM,SACNnD,KAAMgI,EAAKiE,QACXtM,SAAUqI,EAAKtB,YACfiC,eAAgB,GAChBjK,KAAMsJ,EAAKuB,QACXV,MAAOb,EAAKwB,gBAEdvB,GAAS,GACT1E,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU8E,KAoG7BM,CAASzB,EAAWC,EAAcU,IACpD9D,IAAOmD,EAAa0B,KAAiBC,KACrC9G,IAAI,UAEN,uBAAGgB,cAAY,mBAAmB8E,EAAKtB,aACvC,wBAAI3D,UAAU,iBACXkE,EAAgBrC,KAAI,SAACC,GACpB,IAAMoE,EAAG,UAAMjB,EAAK,aAAD,OAAcnD,EAAQ,KACzC,MAAY,SAARoE,GAA0B,KAARA,GAAsB,MAARA,EAAoB,IACxDiC,GAAkB,EAEhB,wBACEjG,IAAMJ,EACN3B,cAAA,UAAiB2B,EAAjB,oBACA9B,UAAU,oBAEV,2BACEI,KAAK,WAEL8B,IAAMJ,EACN7C,MAAQgG,EAAK,aAAD,OAAcnD,EAAQ,IAClCxB,QAAU8H,IAGX,UAAGnD,EAAK,aAAD,OAAcnD,EAAQ,KAA7B,WACKmD,EAAK,gBAAD,OAAiBnD,EAAQ,WAK3C,uBAAG3B,cAAY,gBAAgB8E,EAAKkB,iBACpC,4BACE/F,KAAK,SACLD,cAAY,oBACZH,UAAU,iCACVT,SAAWyI,EACX1H,QAAU,kBAAMoH,MALlB,2BCzHKiC,OA9Cf,WACE,IAEIL,EAEA3J,qBAAWiJ,IAHb7J,UACEuK,gBAIItF,EAAgB6C,cAAhB7C,YAERrF,qBAAU,YACO,uCAAG,4BAAArD,EAAA,sEACMgB,EAAc0H,GADpB,OACVxI,EADU,OAEhB8N,EAAgB9N,EAAQkD,OAFR,2CAAH,qDAIf6K,KACC,CAACD,EAAiBtF,IAErBrF,qBAAU,WAIR,GAHgD,OAA5C6B,aAAamE,QAAQ,oBACvBnE,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU,KAEP,OAA9CH,aAAamE,QAAQ,qBAA+B,CAEtDnE,aAAaC,QAAQ,oBAAqBC,KAAKC,UADnC,CAAEC,UAAW,GAAIlC,MAAO,MAGO,OAAzC8B,aAAamE,QAAQ,iBACvBnE,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU,OAErD,IAEH,IAAIoD,GAAmB,EAMvB,OALIrD,KAAKgE,MAAkD,OAA5ClE,aAAamE,QAAQ,sBAElCZ,EADkBrD,KAAKgE,MAAMlE,aAAamE,QAAQ,oBACrBI,MAAK,SAACmC,GAAD,OAASA,EAAI9K,KAAO4H,MAItD,iCACE,kBAAC,GAAD,CACED,iBAAmBA,EACnBC,YAAcA,MCnBP4F,OArBf,WACE,OACE,oCACE,kBAAC,GAAD,CAAQ9I,QAAQ,SAAhB,YACA,6BAASd,UAAU,qBACjB,kBAAC,IAAD,CAAMC,GAAG,qBACP,4BAAQG,KAAK,SAASD,cAAY,eAAeH,UAAU,gBAA3D,qBAIF,kBAAC,IAAD,CAAMC,GAAG,oBAAoBE,cAAY,kBACvC,4BAAQC,KAAK,SAASJ,UAAU,gBAAhC,sBAKJ,kBAACqD,GAAD,QCqBSwG,OAnCf,WACE,MAA4BtM,qBAA5B,mBAAOuM,EAAP,KAAeC,EAAf,KAKA,OAHApL,qBAAU,Y9BsFL,WAAP,gC8BrFIqL,GAAgBC,MAAK,gBAAatB,EAAb,cAAGjK,MAAH,MAAaiK,OAAb,OAA6BoB,EAAUpB,QAC3D,IAED,oCACE,kBAAC,GAAD,CAAQ7H,QAAQ,SAAhB,oBACA,6BAASd,UAAU,qBACjB,kBAAC,IAAD,CAAMC,GAAG,kCACP,4BACEG,KAAK,SACLD,cAAY,wBACZH,UAAU,gBAHZ,qBAQF,kBAAC,IAAD,CAAMC,GAAG,0BACP,4BAAQG,KAAK,SAASD,cAAY,kBAAkBH,UAAU,gBAA9D,wBAIF,kBAAC,IAAD,CAAMC,GAAE,mBAAe6J,IACrB,4BAAQ1J,KAAK,SAASD,cAAY,mBAAmBH,UAAU,gBAA/D,oBAKJ,kBAACqD,GAAD,QCLS6G,OA3Bf,WACE,MAA8B3M,mBAAS,IAAvC,mBAAO4M,EAAP,KAAgBC,EAAhB,KAMA,OAJAzL,qBAAU,Y/BmFL,WAAP,gC+BlFI0L,GAAiBJ,MAAK,gBAAchI,EAAd,cAAGR,OAAH,MAAcQ,QAAd,OAA+BmI,EAAWnI,QAC/D,IAGD,oCACE,kBAAC,GAAD,CAAQnB,QAAQ,SAAhB,oBACA,iCACE,kBAAC,IAAD,CAAMb,GAAG,kCACP,4BAAQG,KAAK,SAASD,cAAY,yBAAlC,qBAIF,kBAAC,IAAD,CAAMF,GAAE,mBAAekK,IACrB,4BAAQ/J,KAAK,SAASD,cAAY,oBAAlC,oBAKJ,kBAACkD,GAAD,QCqCSiH,OA1Df,WACE,MAAsC/M,mBAAS,IAA/C,mBAAOiH,EAAP,KAAoB+F,EAApB,KACA,EAAkDhN,mBAAS,IAA3D,mBAAOiN,EAAP,KAA0BC,EAA1B,KACqBvL,EAA+BS,qBAAWxC,GAAvD4B,UAAaG,yBAEfwL,EAAa,SAACC,GAClB,IAEMC,EADmBD,EAAM9I,KAAI,SAACoD,GAAD,OAAUA,KAE1CpD,KAAI,SAACoD,GAAD,gBAHM,iDAGN,OAAoBA,EAApB,iBACPwF,EAAqBG,IAiBvB,OAdAjM,qBAAU,YACc,uCAAG,gCAAArD,EAAA,sEACFkB,IADE,OAIvB,IAHMiC,EADiB,OAEA,GACjBoM,EAAkB,GACfC,EAAI,EAAGA,EAFO,GAEaA,GAAK,EACvCD,EAAgB1G,KAAK1F,EAAOC,MAAMoM,GAAGC,eAEvCR,EAAeM,GACfH,EAAWG,GARY,2CAAH,qDAUtBG,KACC,IAGD,oCACE,kBAAC,GAAD,CAAQlK,QAAQ,SAAhB,yBACA,6BAASd,UAAU,4BAChBwE,GAAeA,EAAY3C,KAAI,SAACxG,EAAYyG,GAAb,OAC9B,4BACEI,IAAM7G,EACN+E,KAAK,SACLE,QAAUpB,EACVc,UAAU,+BAEV,kBAAC,IAAD,CAAMC,GAAG,WAAWG,KAAK,UACvB,yBAAKD,cAAA,UAAiB2B,EAAjB,qBACH,yBACEX,IAAMqJ,EAAkB1I,GACxB3C,IAAM9D,EACN8E,cAAA,UAAiB2B,EAAjB,eAEF,uBAAG3B,cAAA,UAAiB2B,EAAjB,eACCzG,UAOd,kBAACgI,GAAD,QCES4H,OAvDf,WACE,MAAsC1N,mBAAS,IAA/C,mBAAOiH,EAAP,KAAoB+F,EAApB,KACA,EAAkDhN,mBAAS,IAA3D,mBAAOiN,EAAP,KAA0BC,EAA1B,KACqBvL,EAA+BS,qBAAWxC,GAAvD4B,UAAaG,yBAEfwL,EAAa,SAACC,GAClB,IAEMC,EADmBD,EAAM9I,KAAI,SAACoD,GAAD,OAAUA,KAE1CpD,KAAI,SAACoD,GAAD,gBAHM,qDAGN,OAAoBA,EAApB,iBACPwF,EAAqBG,IAiBvB,OAdAjM,qBAAU,YACc,uCAAG,gCAAArD,EAAA,sEACFiB,IADE,OAIvB,IAHMkC,EADiB,OAEA,GACjBoM,EAAkB,GACfC,EAAI,EAAGA,EAFO,GAEaA,GAAK,EACvCD,EAAgB1G,KAAK1F,EAAOgD,OAAOqJ,GAAGI,gBAExCX,EAAeM,GACfH,EAAWG,GARY,2CAAH,qDAUtBG,KACC,IAGD,oCACE,kBAAC,GAAD,CAAQlK,QAAQ,SAAhB,yBACC0D,GAAeA,EAAY3C,KAAI,SAACxG,EAAYyG,GAAb,OAC9B,4BACEI,IAAM7G,EACN+E,KAAK,SACLE,QAAUpB,GAEV,kBAAC,IAAD,CAAMe,GAAG,YACP,yBAAKE,cAAA,UAAiB2B,EAAjB,qBACH,yBACEX,IAAMqJ,EAAkB1I,GACxB3C,IAAM9D,EACN8E,cAAA,UAAiB2B,EAAjB,eAEF,uBAAG3B,cAAA,UAAiB2B,EAAjB,eACCzG,SAMZ,kBAACgI,GAAD,QCHS8H,OA7Cf,WACE,MAAwB5N,mBAAS,IAAjC,mBAAON,EAAP,KAAamO,EAAb,KACA,EAAwC7N,mBAAS,OAAjD,mBAAO8N,EAAP,KAAqBC,EAArB,KACA,EAAoC/N,mBAAS,IAA7C,mBAAOgO,EAAP,KAAmBC,EAAnB,KAkBA,OAhBA7M,qBAAU,YlCwFL,WAAP,gCkCvFI8M,GACGxB,MAAK,gBAAGvL,EAAH,EAAGA,MAAH,OAAe0M,EAAQ,CAAC,CAAElC,QAAS,QAAb,oBAAyBxK,UACtD,IAIHC,qBAAU,WACJ0M,EAAaK,SAAS,QACxB5P,IACGmO,MAAK,gBAAGvL,EAAH,EAAGA,MAAH,OAAe8M,EAAc9M,MlCmFpC,SAAP,kCkCjFIiN,CAAcN,GAAcpB,MAAK,gBAAGvL,EAAH,EAAGA,MAAH,OAAe8M,EAAc9M,QAC7D,CAAC2M,IACJhE,QAAQC,IAAIiE,GAGV,oCACE,kBAAC,GAAD,wBACA,4BACEpL,cAAY,2BACZlB,MAAQoM,EACRhL,SAjBqB,SAAC,GAAD,IAAapB,EAAb,EAAGZ,OAAUY,MAAb,OAA2BqM,EAAgBrM,KAmB/DhC,EAAK4E,KAAI,WAAcC,GAAd,IAAGoH,EAAH,EAAGA,QAAH,OACR,4BACEhH,IAAMJ,EACN7C,MAAQiK,EACR/I,cAAA,UAAiB+I,EAAjB,YAECA,OAINqC,GAAc,kBAAC,GAAD,CAAU7C,MAAQ6C,IACjC,kBAAClI,GAAD,QCnCSuI,OAVf,WACE,OACE,oCACE,kBAAC,GAAD,MACA,yCACA,kBAACvI,GAAD,QCgDSwI,OApDf,WACE,IAIMC,EAAYpL,KAAKgE,MAAMlE,aAAamE,QAAQ,UAAY,GAE9D,OACE,oCACE,kBAAC,GAAD,CAAQ7D,QAAQ,SAAhB,UACA,6BAASd,UAAU,qBACjB,uBACEG,cAAY,iBAEV2L,EAAUtO,OAEd,yBAAKwC,UAAU,6BACb,4BACEG,cAAY,mBACZC,KAAK,SACLJ,UAAU,gBAEV,kBAAC,IAAD,CAAMC,GAAG,oBAAT,oBAIF,4BACEE,cAAY,uBACZC,KAAK,SACLJ,UAAU,gBAEV,kBAAC,IAAD,CAAMC,GAAG,uBAAT,uBAIF,4BACEE,cAAY,qBACZC,KAAK,SACLJ,UAAU,eACVM,QAtCK,WACbE,aAAauL,UAuCL,kBAAC,IAAD,CAAM9L,GAAG,gBAAT,WAMN,kBAACoD,GAAD,Q,oBCmDS2I,OAjGf,WACE,IAAMC,EAAqBvL,KAAKgE,MAAMlE,aAAamE,QAAQ,gBAC3D,EAAuCpH,mBAAS0O,GAAhD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4B5O,oBAAS,GAArC,mBAAO6O,EAAP,KAAeC,EAAf,KAEMC,EAAgB,SAAC5G,GACrB,IAAM6G,EAAY7G,EAEduG,EAAmBvG,QAAO,SAAC8G,GAAD,OAAY9G,IAAW8G,EAAOpM,QADxD6L,EAEJE,EAAeI,IAcjB,OAXA5N,qBAAU,WACoC,OAAxC6B,aAAamE,QAAQ,gBACvBnE,aAAaC,QAAQ,cAAeC,KAAKC,UAAU,OAEpD,IAQD,oCACE,kBAAC,GAAD,CAAQG,QAAQ,SAAhB,mBACA,iCACE,4BACEV,KAAK,SACLD,cAAY,oBACZG,QAAU,kBAAMgM,EAAc,MAHhC,OAOA,4BACElM,KAAK,SACLD,cAAY,qBACZG,QAAU,kBAAMgM,EAAc,YAHhC,WAOA,4BACElM,KAAK,SACLD,cAAY,sBACZG,QAAU,kBAAMgM,EAAc,YAHhC,YAQF,iCACGJ,GAAgBA,EAAarK,KAAI,SAAC2K,EAAQ1K,GAAT,OAChC,6BAASI,IAAMsK,EAAOpQ,IACpB,kBAAC,IAAD,CAAM6D,GAAE,WAAOuM,EAAOpM,KAAd,aAAuBoM,EAAOpQ,KACpC,yBACEqQ,MAAQ,CAAEC,MAAO,SACjBvL,IAAMqL,EAAO1G,MACb3F,cAAA,UAAiB2B,EAAjB,qBACA3C,IAAMqN,EAAO7Q,QAGjB,uBAAGwE,cAAA,UAAiB2B,EAAjB,yBACgB,WAAhB0K,EAAOpM,KAAP,UACMoM,EAAOvP,KADb,cACuBuP,EAAO5P,UAD9B,UAEM4P,EAAO5G,iBAEhB,kBAAC,IAAD,CACE3F,GAAE,WAAOuM,EAAOpM,KAAd,aAAuBoM,EAAOpQ,IAChC+D,cAAA,UAAiB2B,EAAjB,qBAEE0K,EAAO7Q,MAEX,4BACEyE,KAAK,SACLE,QAAU,kBAvDPqM,EAuDmBH,EAtDhCI,KAAK,yBAAD,OAA0BD,EAAUvM,KAApC,aAA6CuM,EAAUvQ,UAC3DiQ,GAAU,GAFE,IAACM,IAyDH,yBACExL,IAAMmE,KACNnF,cAAA,UAAiB2B,EAAjB,yBACA3C,IAAI,iBAELiN,GAAU,6CAEb,uBAAGjM,cAAA,UAAiB2B,EAAjB,0BACC0K,EAAO5E,UAEV4E,EAAO3E,KAAKhG,KAAI,SAACgL,GAAD,OACf,0BAAM3K,IAAM2K,EAAM1M,cAAA,UAAiB2B,EAAjB,YAA0B+K,EAA1B,oBACdA,aCcHC,OApGf,WACE,IAAMC,EAAyBrM,KAAKgE,MAAMlE,aAAamE,QAAQ,oBAC/D,EAA8CpH,mBAASwP,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA4B1P,oBAAS,GAArC,mBAAO6O,EAAP,KAAeC,EAAf,KAEMC,EAAgB,SAAC5G,GACrB,IAAM6G,EAAY7G,EAEdqH,EAAuBrH,QAAO,SAAC8G,GAAD,OAAY9G,IAAW8G,EAAOpM,QAD5D2M,EAEJE,EAAmBV,IAerB,OACE,oCACE,kBAAC,GAAD,CAAQzL,QAAQ,SAAhB,sBACA,iCACE,4BACEV,KAAK,SACLD,cAAY,oBACZG,QAAU,kBAAMgM,EAAc,MAHhC,OAOA,4BACElM,KAAK,SACLD,cAAY,qBACZG,QAAU,kBAAMgM,EAAc,YAHhC,WAOA,4BACElM,KAAK,SACLD,cAAY,sBACZG,QAAU,kBAAMgM,EAAc,YAHhC,YAQF,iCACGU,GAAmBA,EAAgBnL,KAAI,SAAC2K,EAAQ1K,GAAT,OACtC,6BAASI,IAAMsK,EAAOpQ,IACpB,kBAAC,IAAD,CAAM6D,GAAE,WAAOuM,EAAOpM,KAAd,aAAuBoM,EAAOpQ,KACpC,yBACEqQ,MAAQ,CAAEC,MAAO,SACjBvL,IAAMqL,EAAO1G,MACb3F,cAAA,UAAiB2B,EAAjB,qBACA3C,IAAMqN,EAAO7Q,QAGjB,uBAAGwE,cAAA,UAAiB2B,EAAjB,yBACgB,WAAhB0K,EAAOpM,KAAP,UACMoM,EAAOvP,KADb,cACuBuP,EAAO5P,UAD9B,UAEM4P,EAAO5G,iBAEhB,kBAAC,IAAD,CACE3F,GAAE,WAAOuM,EAAOpM,KAAd,aAAuBoM,EAAOpQ,IAChC+D,cAAA,UAAiB2B,EAAjB,qBAEE0K,EAAO7Q,MAEX,4BACEyE,KAAK,SACLE,QAAU,kBA9DPqM,EA8DmBH,EA7DhCI,KAAK,yBAAD,OAA0BD,EAAUvM,KAApC,aAA6CuM,EAAUvQ,UAC3DiQ,GAAU,GAFE,IAACM,IAgEH,yBACExL,IAAMmE,KACNnF,cAAA,UAAiB2B,EAAjB,yBACA3C,IAAI,iBAELiN,GAAU,6CAEb,4BACEhM,KAAK,SACLE,QAAU,kBApEF,SAAClE,GACnB,IAAM8Q,EAAgBF,EAAgBtH,QAAO,SAAC8G,GAAD,OAAYA,EAAOpQ,KAAOA,KACjE+Q,EAAsBzM,KAAKC,UAAUuM,GAC3C1M,aAAaC,QAAQ,kBAAmB0M,GACxCF,EAAmBC,GAgEOE,CAAYZ,EAAOpQ,MAEnC,yBACE+E,IAAM6E,KACN7F,cAAA,UAAiB2B,EAAjB,4BACA3C,IAAI,gC,6CC1ELkO,OAlBf,YAAiE,IAAzCC,EAAwC,EAAxCA,iBAAkBvM,EAAsB,EAAtBA,UAAcwM,EAAQ,mBACxDnO,EAAWkO,EACXE,EAAYzM,EAElB,OACE,kBAAC,IAAWwM,EACV,kBAACnO,EAAD,KACE,kBAACoO,EAAD,SCeOC,OAvBf,YAAqC,IAAbnQ,EAAY,EAAZA,SACtB,EAAgCC,mBAAS,IAAzC,mBAAOqC,EAAP,KAAiB8N,EAAjB,KAGM7O,EAAU,CACdC,OAAQ,CACNc,YAEFb,UAAW,CACTc,eAPmB,SAAC,GAAD,IAAGxB,EAAH,EAAGA,OAAH,OAAgBqP,EAAYrP,EAAOY,UAU1D,OACE,kBAAC,EAAYG,SAAb,CAAsBH,MAAQJ,GAC3BvB,ICyCQqQ,OArDf,YAAqC,IAAbrQ,EAAY,EAAZA,SACtB,EAAsCC,mBAAS,IAA/C,mBAAOqF,EAAP,KAAoBgL,EAApB,KACA,EAAoCrQ,mBAAS,IAA7C,mBAAOsF,EAAP,KAAmBgL,EAAnB,KACA,EAA0BtQ,mBAAS,IAAnC,mBAAOmL,EAAP,KAAcG,EAAd,KACA,EAC2BlJ,qBAAWxC,GAD9B2B,OAAUd,EAAlB,EAAkBA,wBAChBE,EADF,EACEA,mBAKFS,qBAAU,WACJX,EACF5C,EAAuB8C,GAAoB+L,MAAK,gBAAGvL,EAAH,EAAGA,MAAH,OAAemK,EAASnK,MAExE5C,IAAoBmO,MAAK,gBAAGvL,EAAH,EAAGA,MAAH,OAAemK,EAASnK,QAElD,CAACV,EAAyBE,IAE7B,MAAuCX,mBAAS,IAAhD,mBAAO0L,EAAP,KAAoBK,EAApB,KACA,EAA4C/L,mBAAS,IAArD,mBAAOgJ,EAAP,KAAuBK,EAAvB,KAEA,EAAoCrJ,mBAAS,IAA7C,mBAAOuQ,EAAP,KAAmB1G,EAAnB,KAEMvI,EAAU,CACdC,OAAQ,CACN8D,cACAC,aACA6F,QACAO,cACA1C,iBACAuH,cAEF/O,UAAW,CACT+D,kBA1BsB,SAAC,GAAD,IAAGzE,EAAH,EAAGA,OAAH,OAAgBuP,EAAevP,EAAOY,QA2B5D8D,iBA1BqB,SAAC,GAAD,IAAG1E,EAAH,EAAGA,OAAH,OAAgBwP,EAAcxP,EAAOY,QA2B1D4J,WACAS,kBACA1C,oBACAQ,kBAIJ,OACE,kBAAC,GAAYhI,SAAb,CAAsBH,MAAQJ,GAC3BvB,ICsCQyQ,OA7Ef,YAAsC,IAAbzQ,EAAY,EAAZA,SACvB,EAAsCC,mBAAS,IAA/C,mBAAOqF,EAAP,KAAoBgL,EAApB,KACA,EAAoCrQ,mBAAS,IAA7C,mBAAOsF,EAAP,KAAmBgL,EAAnB,KAGA,EAA8CtQ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KAEA,EAA4BN,mBAAS,IAArC,mBAAOkE,EAAP,KAAeuB,EAAf,KACA,EAA4CzF,mBAAS,IAArD,mBAAOkG,EAAP,KAAuBuK,EAAvB,KACA,EAA4CzQ,mBAAS,IAArD,mBAAOmE,EAAP,KAAuBuM,EAAvB,KAEA,EAC2BtO,qBAAWxC,GAD9B2B,OAAUd,EAAlB,EAAkBA,wBAChBE,EADF,EACEA,mBACIwF,EAAoB,uCAAG,iCAAApI,EAAA,yDAAS+C,EAAT,EAASA,OAEf,SADfC,EAAeD,EAAOE,WADD,yCAEQ0P,EAAkB,KAF1B,UAGG,IAA1BvM,EAAelD,QAAgBZ,IAAoBU,EAH5B,wBAIzBT,EAAmBS,GAJM,SAKJ3B,EAAwB2B,GALpB,OAKnBG,EALmB,OAMzBwP,EAAkBxP,EAAOgD,QANA,wBAQzBwM,EAAkB,IARO,4CAAH,sDAY1BtP,qBAAU,WACJX,EACFjC,EAA2BmC,GACxB+L,MAAK,SAACxL,GAAD,OAAYuE,EAAUvE,EAAOgD,WAErCvF,IAAqB+N,MAAK,SAACxL,GAAD,OAAYuE,EAAUvE,EAAOgD,aAExD,CAACvD,EAAoBF,IAExB,MAAyCT,mBAAS,IAAlD,mBAAO0G,EAAP,KAAqB0C,EAArB,KACA,EAA4CpJ,mBAAS,IAArD,mBAAOgJ,EAAP,KAAuBK,EAAvB,KAEAjI,qBAAU,YACO,uCAAG,4BAAArD,EAAA,sEACKoB,IADL,OACV+B,EADU,OAEhBuP,EAAkBvP,EAAOgD,QAFT,2CAAH,qDAIf7C,KACC,IAEH,MAAoCrB,mBAAS,IAA7C,mBAAOuQ,EAAP,KAAmB1G,EAAnB,KAEMvI,EAAU,CACdC,OAAQ,CACN8D,cACAC,aACApB,SACAgC,iBACA/B,iBACAuC,eACAsC,iBACAuH,cAEF/O,UAAW,CACT+D,kBAxDsB,SAAC,GAAD,IAAGzE,EAAH,EAAGA,OAAH,OAAgBuP,EAAevP,EAAOY,QAyD5D8D,iBAxDqB,SAAC,GAAD,IAAG1E,EAAH,EAAGA,OAAH,OAAgBwP,EAAcxP,EAAOY,QAyD1DyE,uBACAV,YACA2D,mBACAC,oBACAQ,kBAGJ,OACE,kBAAC,GAAahI,SAAd,CAAuBH,MAAQJ,GAAWvB,ICF/B4Q,OAhEf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOjL,KAAK,sBAAsBlC,UAAY+L,KAC9C,kBAAC,IAAD,CAAO7J,KAAK,mBAAmBlC,UAAYiL,KAC3C,kBAAC,GAAD,CACEmC,OAAK,EACLlL,KAAK,UACLqK,iBAAmBjQ,EACnB0D,UAAY8K,KAEd,kBAAC,IAAD,CAAO5I,KAAK,yBAAyBlC,UAAYoK,KACjD,kBAAC,IAAD,CAAOlI,KAAK,yBAAyBlC,UAAY6K,KACjD,kBAAC,IAAD,CAAO3I,KAAK,iCAAiClC,UAAYuJ,KACzD,kBAAC,IAAD,CAAOrH,KAAK,iCAAiClC,UAAYkK,KACzD,kBAAC,IAAD,CAAOhI,KAAK,oBAAoBlC,UAAY8I,KAC5C,kBAAC,IAAD,CAAO5G,KAAK,oBAAoBlC,UAAYmJ,KAC5C,kBAAC,IAAD,CAAOjH,KAAK,YAAYlC,UAAY6I,KACpC,kBAAC,GAAD,CACEuE,OAAK,EACLlL,KAAK,oCACLqK,iBAAmBS,GACnBhN,UAAYyH,KAEd,kBAAC,GAAD,CACE2F,OAAK,EACLlL,KAAK,oCACLqK,iBAAmBK,GACnB5M,UAAY4I,KAEd,kBAAC,GAAD,CACEwE,OAAK,EACLlL,KAAK,wBACLqK,iBAAmBS,GACnBhN,UAAY2F,KAEd,kBAAC,GAAD,CACEyH,OAAK,EACLlL,KAAK,wBACLqK,iBAAmBK,GACnB5M,UAAYsI,KAEd,kBAAC,GAAD,CACE8E,OAAK,EACLlL,KAAK,WACLqK,iBAAmBS,GACnBhN,UAAY6C,KAEd,kBAAC,GAAD,CACEuK,OAAK,EACLlL,KAAK,WACLqK,iBAAmBK,GACnB5M,UAAYgI,KAEd,kBAAC,GAAD,CACEoF,OAAK,EACLlL,KAAK,WACLqK,iBAAmBG,GACnB1M,UAAYzB,MC1DL8O,OARf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,QCFNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SrCwHpB,kBAAmBrJ,WACrBA,UAAUsJ,cAAcC,MAAMzE,MAAK,SAAA0E,GACjCA,EAAaC,kB","file":"static/js/main.c66b51ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","export async function SearchMealByIngredient(ingredient) {\n  const request = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredient}`);\n  const json = await request.json();\n  return json;\n}\n\nexport async function SearchMealByName(name) {\n  const request = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${name}`);\n  const json = await request.json();\n  return json;\n}\n\nexport async function SearchMealByFirstLetter(firstLetter) {\n  const request = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`);\n  const json = await request.json();\n  return json;\n}\n\nexport async function requestMealRecipe() {\n  const request = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n  const json = await request.json();\n  return json;\n}\n\nexport async function SearchCocktailByIngredient(ingredient) {\n  const request = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredient}`);\n  const json = await request.json();\n  return json;\n}\n\nexport async function SearchCocktailByName(name) {\n  const request = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${name}`);\n  const json = await request.json();\n  return json;\n}\n\nexport async function SearchCocktailByFirstLetter(firstLetter) {\n  const request = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${firstLetter}`);\n  const json = await request.json();\n  return json;\n}\n\nexport async function requestDrinkRecipe() {\n  const request = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n  const json = await request.json();\n  return json;\n}\n\nexport async function requestDrinkId(id) {\n  const results = await (await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)).json();\n  return results;\n}\n\nexport async function requestFoodId(id) {\n  const results = await (await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`)).json();\n  return results;\n}\n\nexport async function requestIngredientsDrinks() {\n  const results = await (await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list')).json();\n  return results;\n}\n\nexport async function requestIngredientsMeal() {\n  const results = await (await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list')).json();\n  return results;\n}\n\nexport async function requestFoodCategory() {\n  const request = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n  const json = await request.json();\n  return json;\n}\n\nexport async function requestDrinksCategory() {\n  const request = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n  const json = await request.json();\n  return json;\n}\n\nexport async function requestDrinksByCategory(category) {\n  const request = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n  const json = await request.json();\n  return json;\n}\n\nexport async function requestMealsByCategory(category) {\n  const request = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n  const json = await request.json();\n  return json;\n}\n\nexport async function getRandomDrink() {\n  const drink = await (await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php')).json();\n  return drink;\n}\n\nexport async function getRandomFood() {\n  const food = await (await fetch('https://www.themealdb.com/api/json/v1/1/random.php')).json();\n  return food;\n}\n\nexport async function getListAllAreaOfTheFood() {\n  const listAreaFood = await (await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list')).json();\n  return listAreaFood;\n}\n\nexport async function getFoodByArea(area) {\n  const foodArea = await (await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`)).json();\n  return foodArea;\n}\n","import { createContext } from 'react';\n\nconst GlobalContext = createContext();\n\nexport default GlobalContext;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { requestMealsByCategory, requestFoodCategory } from '../../services/API';\nimport GlobalContext from './GlobalContext';\n\nfunction GlobalProvider({ children }) {\n  const [email, setEmail] = useState('');\n  const [foodCategory, setFoodCategory] = useState([]);\n  const [currentCategory, setCurrentCategory] = useState('');\n  const [filteredMeals, setFilteredMeals] = useState([]);\n\n  const [fetchExploreIngredients, setFetchExploreIngredients] = useState(false);\n  const [exploreIngredients, setExploreIngredients] = useState('');\n\n  const handleEmail = ({ target }) => setEmail(target.value);\n  const handleFetchExploreIngredients = () => setFetchExploreIngredients(true);\n\n  const handleExploreIngredients = ({ target }) => {\n    const value = target.alt ? target.alt : target.innerText;\n    setExploreIngredients(value);\n    handleFetchExploreIngredients();\n  };\n\n  const handleFilteredMeals = async ({ target }) => {\n    const categoryName = target.innerText;\n    if (categoryName === 'All') return setFilteredMeals([]);\n    if (filteredMeals.length === 0 || currentCategory !== categoryName) {\n      setCurrentCategory(categoryName);\n      const result = await requestMealsByCategory(categoryName);\n      setFilteredMeals(result.meals);\n    } else {\n      setFilteredMeals([]);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await requestFoodCategory();\n      setFoodCategory(result.meals);\n    };\n    fetchData();\n  }, []);\n\n  const provide = {\n    values: {\n      email,\n      foodCategory,\n      filteredMeals,\n      fetchExploreIngredients,\n      exploreIngredients,\n    },\n    functions: {\n      setEmail,\n      handleEmail,\n      handleFilteredMeals,\n      handleExploreIngredients,\n    },\n  };\n  return (\n    <GlobalContext.Provider value={ provide }>\n      {children}\n    </GlobalContext.Provider>\n  );\n}\n\nGlobalProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default GlobalProvider;\n","import { createContext } from 'react';\n\nconst UserContext = createContext();\n\nexport default UserContext;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport GlobalContext from '../../context/globalContext/GlobalContext';\nimport UserContext from '../../context/userContext/UserContext';\n\nfunction Login() {\n  const [disabled, setDisabled] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  const {\n    values: {\n      password,\n    },\n    functions: {\n      handlePassword,\n    },\n  } = useContext(UserContext);\n\n  const {\n    values: {\n      email,\n    },\n    functions: {\n      handleEmail,\n    },\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    const emailRegex = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/i;\n    // Expressão Regex retirada no site \"https://regexlib.com/Search.aspx?k=email&c=-1&m=-1&ps=20\"\n    const passwordLength = 6;\n\n    if (emailRegex.test(email) && password.length > passwordLength) {\n      setDisabled(false);\n    }\n\n    if (!emailRegex.test(email) || password.length <= passwordLength) {\n      setDisabled(true);\n    }\n  }, [email, password.length]);\n\n  const handleClick = () => {\n    const user = { email };\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    const obj = { cocktails: {}, meals: {} };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n    setRedirect(true);\n  };\n\n  return (\n    <section className=\"login-page\">\n      {redirect && <Redirect to=\"/comidas\" />}\n      <div className=\"login-container\">\n        <label htmlFor=\"email-input\">\n          <p>Email:</p>\n          <input\n            id=\"email-input\"\n            data-testid=\"email-input\"\n            type=\"email\"\n            value={ email }\n            onChange={ handleEmail }\n            className=\"input-field\"\n          />\n        </label>\n        <label htmlFor=\"password-input\">\n          <p>Senha:</p>\n          <input\n            id=\"password-input\"\n            data-testid=\"password-input\"\n            type=\"password\"\n            value={ password }\n            onChange={ handlePassword }\n            className=\"input-field\"\n          />\n        </label>\n        <button\n          type=\"submit\"\n          data-testid=\"login-submit-btn\"\n          disabled={ disabled }\n          onClick={ handleClick }\n          className=\"page-buttons\"\n        >\n          Entrar\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport profileIcon from '../../images/profileIcon.svg';\nimport searchIcon from '../../images/searchIcon.svg';\nimport exploreIcon from '../../images/exploreIcon.svg';\n\nfunction Header({ children, explore, component }) {\n  const [search, setSearch] = useState(false);\n\n  const searchBar = () => {\n    setSearch(!search);\n  };\n\n  const searchButton = () => (\n    <button type=\"button\" onClick={ searchBar } className=\"header-search-button\">\n      <img\n        src={ searchIcon }\n        alt=\"Ícone de Pesquisa\"\n        data-testid=\"search-top-btn\"\n      />\n    </button>\n  );\n\n  return (\n    <>\n      <header className=\"header-container\">\n        <Link to=\"/perfil\">\n          <img\n            src={ profileIcon }\n            alt=\"Ícone de Perfil\"\n            data-testid=\"profile-top-btn\"\n            className=\"header-search-button\"\n          />\n        </Link>\n        <h2 data-testid=\"page-title\">{children}</h2>\n        {\n          (explore === 'false') ? <img\n            src={ exploreIcon }\n            alt=\"Ícone de Explorar\"\n            data-testid=\"explore-top-btn\"\n          /> : searchButton()\n        }\n      </header>\n      {search && component}\n    </>\n  );\n}\n\nHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  explore: PropTypes.element.isRequired,\n  component: PropTypes.node.isRequired,\n};\n\nexport default Header;\n","import { createContext } from 'react';\n\nconst DrinkContext = createContext();\n\nexport default DrinkContext;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport DrinkContext from '../../context/bebidaContext/DrinkContext';\nimport '../../App.css';\n\nfunction CardDrink() {\n  const {\n    values: {\n      drinks,\n      filteredDrinks,\n    },\n  } = useContext(DrinkContext);\n\n  const maxCards = 12;\n  const data = (filteredDrinks.length === 0) ? drinks : filteredDrinks;\n\n  if (drinks === undefined) return '';\n\n  return (\n    <section className=\"recipe-card-container\">\n      {data.map(({ strDrink, strDrinkThumb, idDrink }, index) => {\n        if (index >= maxCards) return '';\n        return (\n          <Link\n            src={ strDrinkThumb }\n            to={ `/bebidas/${idDrink}` }\n            key={ strDrink }\n            data-testid={ `${index}-recipe-card` }\n            className=\"recipe-card\"\n          >\n            <img\n              src={ strDrinkThumb }\n              alt={ strDrink }\n              data-testid={ `${index}-card-img` }\n            />\n            <p data-testid={ `${index}-card-name` }>{strDrink}</p>\n          </Link>\n        );\n      })}\n    </section>\n  );\n}\n\nexport default CardDrink;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nexport function alertSearchRecipeNotFound() {\n  alert('Sinto muito, não encontramos nenhuma receita para esses filtros.')\n}\n\nexport function alertSearchACaracter() {\n  alert('Sua busca deve conter somente 1 (um) caracter');\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport DrinkContext from '../../context/bebidaContext/DrinkContext';\nimport {\n  SearchCocktailByIngredient,\n  SearchCocktailByName,\n  SearchCocktailByFirstLetter,\n} from '../../services/API';\nimport { alertSearchRecipeNotFound, alertSearchACaracter } from '../../serviceWorker';\n\nfunction SearchBarFood() {\n  const {\n    values: {\n      searchInput,\n      searchType,\n      drinks,\n    },\n    functions: {\n      handleSearchInput,\n      handleSearchType,\n      setDrinks,\n    },\n  } = useContext(DrinkContext);\n\n  const [redirect, setRedirect] = useState(false);\n  const [path, setPath] = useState(false);\n\n  useEffect(() => {\n    if (drinks.length === 1) {\n      setRedirect(true);\n      setPath(`/bebidas/${drinks[0].idDrink}`);\n    }\n  }, [drinks]);\n\n  const requestAPI = async () => {\n    if (searchType === 'first-letter-search' && searchInput.length > 1) {\n      alertSearchACaracter();\n      return '';\n    }\n    let response = '';\n    if (searchType === 'ingredient-search') {\n      response = await SearchCocktailByIngredient(searchInput);\n    }\n    if (searchType === 'name-search') {\n      response = await SearchCocktailByName(searchInput);\n    }\n    if (searchType === 'first-letter-search') {\n      response = await SearchCocktailByFirstLetter(searchInput);\n    }\n    if (response.drinks !== null && searchType !== '') {\n      return setDrinks(response.drinks);\n    }\n    alertSearchRecipeNotFound();\n  };\n\n  if (redirect) return <Redirect to={ path } />;\n\n  return (\n    <section className=\"search-bar-container\">\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        value={ searchInput }\n        onChange={ handleSearchInput }\n        className=\"search-bar-text-input\"\n      />\n      <label htmlFor=\"ingredient-search\">\n        <input\n          id=\"ingredient-search\"\n          type=\"radio\"\n          name=\"search\"\n          data-testid=\"ingredient-search-radio\"\n          onChange={ handleSearchType }\n          value=\"ingredient-search\"\n          className=\"search-bar-radio-input\"\n        />\n        Buscar por ingrediente\n      </label>\n      <label htmlFor=\"name-search\">\n        <input\n          id=\"name-search\"\n          type=\"radio\"\n          name=\"search\"\n          data-testid=\"name-search-radio\"\n          onChange={ handleSearchType }\n          value=\"name-search\"\n          className=\"search-bar-radio-input\"\n        />\n        Buscar por nome\n      </label>\n      <label htmlFor=\"first-letter-search\">\n        <input\n          id=\"first-letter-search\"\n          type=\"radio\"\n          name=\"search\"\n          data-testid=\"first-letter-search-radio\"\n          onChange={ handleSearchType }\n          value=\"first-letter-search\"\n          className=\"search-bar-radio-input\"\n        />\n        Buscar pela primeira letra\n      </label>\n      <button\n        data-testid=\"exec-search-btn\"\n        type=\"button\"\n        onClick={ requestAPI }\n        className=\"page-buttons\"\n      >\n        Procurar\n      </button>\n    </section>\n  );\n}\n\nexport default SearchBarFood;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../../images/drinkIcon.svg';\nimport exploreIcon from '../../images/exploreIcon.svg';\nimport mealIcon from '../../images/mealIcon.svg';\nimport './style.css';\n\nexport default function Footer() {\n  return (\n    <footer data-testid=\"footer\" className=\"footer\">\n      <Link src={ drinkIcon } to=\"/bebidas\" data-testid=\"drinks-bottom-btn\">\n        <img\n          alt=\"\"\n          src={ drinkIcon }\n        />\n      </Link>\n      <Link src={ exploreIcon } to=\"/explorar\" data-testid=\"explore-bottom-btn\">\n        <img\n          alt=\"\"\n          src={ exploreIcon }\n        />\n      </Link>\n      <Link src={ mealIcon } to=\"/comidas\" data-testid=\"food-bottom-btn\">\n        <img\n          alt=\"\"\n          src={ mealIcon }\n        />\n      </Link>\n    </footer>\n  );\n}\n","import React, { useContext } from 'react';\nimport DrinkContext from '../../context/bebidaContext/DrinkContext';\n\nfunction DrinkCategoryBar() {\n  const {\n    values: { drinksCategory },\n    functions: { handleFilteredDrinks },\n  } = useContext(DrinkContext);\n  const maxCategories = 5;\n\n  return (\n    <div className=\"search-button-container\">\n      <button\n        type=\"button\"\n        key=\"All\"\n        data-testid=\"All-category-filter\"\n        className=\"page-buttons\"\n        onClick={ handleFilteredDrinks }\n      >\n        All\n      </button>\n      {drinksCategory.map(({ strCategory }, index) => {\n        if (index >= maxCategories) {\n          return '';\n        }\n        return (\n          <button\n            type=\"button\"\n            key={ strCategory }\n            data-testid={ `${strCategory}-category-filter` }\n            className=\"page-buttons\"\n            onClick={ handleFilteredDrinks } // setar no estado global o filtro que está sendo selecionado e utilizar ele para expor os drinks\n          >\n            {strCategory}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default DrinkCategoryBar;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport CardDrink from '../../components/Card/CardDrink';\nimport SearchBarDrink from '../../components/SearchBar/SearchBarDrink';\nimport Footer from '../../components/footer';\nimport DrinkCategoryBar from '../../components/CategoryBar/DrinkCategoryBar';\n\nfunction Bebida() {\n  return (\n    <section>\n      <Header component={ <SearchBarDrink /> }>Bebidas</Header>\n      <DrinkCategoryBar />\n      <CardDrink />\n      <Footer />\n    </section>\n  );\n}\n\nexport default Bebida;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport DrinkContext from '../../context/bebidaContext/DrinkContext';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport '../../index.css';\n\nfunction copyToClipboard(id, callback) {\n  navigator.clipboard.writeText(`http://localhost:3000/bebidas/${id}`);\n  callback(true);\n}\n\nfunction favorite(isFavorited, callback, item) {\n  const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (isFavorited) {\n    const newFavorites = favorites\n      .filter((foodOrDrink) => foodOrDrink.id !== item.idDrink);\n    callback(false);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n  } else {\n    const newFavorites = [...favorites, {\n      id: item.idDrink,\n      type: 'bebida',\n      area: '',\n      category: item.strCategory,\n      alcoholicOrNot: item.strAlcoholic,\n      name: item.strDrink,\n      image: item.strDrinkThumb,\n    }];\n    callback(true);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n  }\n}\n\nfunction CardDrinkDetails({ alreadyFavorited, idDaReceita }) {\n  const {\n    values: {\n      detailDrinks,\n    },\n  } = useContext(DrinkContext);\n\n  const LAST_INGREDIENT = 15;\n  const ingredientIndex = [];\n  for (let index = 0; index < LAST_INGREDIENT; index += 1) {\n    ingredientIndex.push(index);\n  }\n\n  const [isCopied, setIsCopied] = useState(false);\n  const [favorited, setFavorited] = useState(alreadyFavorited);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const ingredients = [];\n  const recipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const recipeStarted = Object.keys(recipes.cocktails).some((id) => id === idDaReceita);\n  function startRecipe() {\n    const newMeals = { ...recipes, cocktails: { [idDaReceita]: ingredients } };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newMeals));\n    setRedirect(true);\n  }\n\n  const recipesDone = JSON.parse(localStorage.getItem('doneRecipes'));\n  const recipeFinished = recipesDone.some((item) => item.id === idDaReceita);\n\n  if (redirect) return <Redirect to={ `/bebidas/${idDaReceita}/in-progress` } />;\n\n  return (\n    <section>\n      {detailDrinks && detailDrinks.map((item) => (\n        <div key={ item.strDrink } className=\"imageDetails\">\n          <img\n            src={ item.strDrinkThumb }\n            alt={ item.strDrink }\n            data-testid=\"recipe-photo\"\n          />\n          <h3 data-testid=\"recipe-title\">{item.strDrink}</h3>\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            onClick={ () => { copyToClipboard(idDaReceita, setIsCopied); } }\n            src={ shareIcon }\n            alt=\"share\"\n          />\n          {isCopied && <p>Link copiado!</p>}\n          <input\n            type=\"image\"\n            data-testid=\"favorite-btn\"\n            onClick={ () => { favorite(favorited, setFavorited, item); } }\n            src={ (favorited) ? blackHeartIcon : whiteHeartIcon }\n            alt=\"share\"\n          />\n          <p data-testid=\"recipe-category\">{item.strAlcoholic}</p>\n          <ul>\n            {ingredientIndex.map((index) => {\n              const srt = `${item[`strMeasure${index + 1}`]}`;\n              if (srt === 'null' || srt === '' || srt === ' ') return '';\n              ingredients.push(`${srt} ${item[`strIngredient${index + 1}`]}`);\n              return (\n                <li key={ index } data-testid={ `${index}-ingredient-name-and-measure` }>\n                  {`${srt} ${item[`strIngredient${index + 1}`]}`}\n                </li>\n              );\n            })}\n          </ul>\n          <p data-testid=\"instructions\">{item.strInstructions}</p>\n        </div>\n      ))}\n      {!recipeFinished\n      && (\n        <button\n          type=\"button\"\n          onClick={ () => { startRecipe(); } }\n          className=\"page-buttons start-recipe\"\n          data-testid=\"start-recipe-btn\"\n        >\n          {(recipeStarted) ? 'Continuar Receita' : 'Iniciar Receita'}\n        </button>)}\n    </section>\n  );\n}\n\nCardDrinkDetails.propTypes = {\n  alreadyFavorited: PropTypes.bool.isRequired,\n  idDaReceita: PropTypes.string.isRequired,\n};\n\nexport default CardDrinkDetails;\n","import React, { useContext } from 'react';\nimport DrinkContext from '../../context/bebidaContext/DrinkContext';\nimport '../../index.css';\n\nfunction FoodRecomendation() {\n  const {\n    values: {\n      recomendations,\n    },\n  } = useContext(DrinkContext);\n\n  const LAST_CARD_CAROUSEL = 6;\n\n  return (\n    <div className=\"recommendation\">\n      {recomendations.map((item, index) => {\n        if (index >= LAST_CARD_CAROUSEL) return '';\n        return (\n          <div\n            key={ item.strMeal }\n            className=\"recommendation-item\"\n            data-testid={ `${index}-recomendation-card` }\n          >\n            <img\n              src={ item.strMealThumb }\n              alt={ item.strMeal }\n              data-testid={ `${index}-card-img` }\n            />\n            <p data-testid={ `${index}-recomendation-title` }>{item.strMeal}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FoodRecomendation;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { requestMealRecipe, requestDrinkId } from '../../../services/API';\nimport DrinkContext from '../../../context/bebidaContext/DrinkContext';\nimport CardDrinkDetails from '../../../components/Card/CardDrinkDetails';\nimport FoodRecomendation from '../../../components/Carousel/FoodRecomendation';\n\nfunction BebidaDetalhes() {\n  const {\n    functions: {\n      setDetailsDrinks,\n      setRecomendations,\n    },\n  } = useContext(DrinkContext);\n\n  const { idDaReceita } = useParams();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (localStorage.getItem('favoriteRecipes') === null) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      const obj = { cocktails: {}, meals: {} };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n    }\n    if (localStorage.getItem('doneRecipes') === null) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    const fetchDrink = async () => {\n      const request = await requestDrinkId(idDaReceita);\n      setDetailsDrinks(request.drinks);\n    };\n    fetchDrink();\n  }, [setDetailsDrinks, idDaReceita]);\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const request = await requestMealRecipe();\n      setRecomendations(request.meals);\n    };\n    fetchMeals();\n  }, [setRecomendations]);\n\n  let alreadyFavorited = false;\n  if (JSON.parse(localStorage.getItem('favoriteRecipes') !== null)) {\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    alreadyFavorited = favorites.some((obj) => obj.id === idDaReceita);\n  }\n\n  return (\n    <section>\n      {!loading\n      && (\n        <>\n          <CardDrinkDetails\n            alreadyFavorited={ alreadyFavorited }\n            idDaReceita={ idDaReceita }\n          />\n          <FoodRecomendation />\n        </>\n      )}\n    </section>\n  );\n}\n\nexport default BebidaDetalhes;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport DrinkContext from '../../context/bebidaContext/DrinkContext';\nimport { setLocalStorageDoneRecipesDrinks } from '../../services/LocalStorage';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport '../../index.css';\n\nfunction copyToClipboard(id, callback) {\n  navigator.clipboard.writeText(`http://localhost:3000/bebidas/${id}`);\n  callback(true);\n}\n\nfunction favorite(isFavorited, callback, item) {\n  const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (isFavorited) {\n    const newFavorites = favorites\n      .filter((foodOrDrink) => foodOrDrink.id !== item.idDrink);\n    callback(false);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n  } else {\n    const newFavorites = [...favorites, {\n      id: item.idDrink,\n      type: 'bebida',\n      area: '',\n      category: item.strCategory,\n      alcoholicOrNot: item.strAlcoholic,\n      name: item.strDrink,\n      image: item.strDrinkThumb,\n    }];\n    callback(true);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n  }\n}\n\nfunction CardDrinkInProgress({ alreadyFavorited, idDaReceita }) {\n  const {\n    values: {\n      detailDrinks,\n    },\n    functions: {\n      setDoneRecipe,\n    },\n  } = useContext(DrinkContext);\n\n  console.log(detailDrinks);\n  const date = new Date().toLocaleDateString();\n\n  const [redirect, setRedirect] = useState(false);\n\n  const handleClick = () => {\n    setLocalStorageDoneRecipesDrinks(detailDrinks, date);\n    setDoneRecipe(detailDrinks.strDrink);\n    setRedirect(true);\n  };\n\n  const [disableButton, setDisableButton] = useState(true);\n\n  let checkButton = 0;\n  let ingredientList = 0;\n\n  const disabledButton = () => {\n    if (checkButton === ingredientList) {\n      setDisableButton(false);\n    } else {\n      setDisableButton(true);\n    }\n  };\n\n  const LAST_INGREDIENT = 15;\n  const ingredientIndex = [];\n  for (let index = 0; index < LAST_INGREDIENT; index += 1) {\n    ingredientIndex.push(index);\n  }\n\n  const handleCheckedBox = (event) => {\n    const { parentNode } = event.target;\n    const { checked } = event.target;\n    if (checked) {\n      parentNode.className = 'checkedBox-true';\n      checkButton += 1;\n    } else {\n      parentNode.className = 'checkedBox-false';\n      checkButton -= 1;\n    }\n    disabledButton();\n  };\n\n  const [isCopied, setIsCopied] = useState(false);\n  const [favorited, setFavorited] = useState(alreadyFavorited);\n\n  if (redirect) return <Redirect to=\"/receitas-feitas\" />;\n\n  return (\n    <section>\n      {detailDrinks.map((item) => (\n        <div key={ item.strDrink } className=\"imageDetails\">\n          <img\n            src={ item.strDrinkThumb }\n            alt={ item.strDrink }\n            data-testid=\"recipe-photo\"\n          />\n          <h3 data-testid=\"recipe-title\">{item.strDrink}</h3>\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            onClick={ () => { copyToClipboard(idDaReceita, setIsCopied); } }\n            src={ shareIcon }\n            alt=\"share\"\n          />\n          {isCopied && <p>Link copiado!</p>}\n          <input\n            type=\"image\"\n            data-testid=\"favorite-btn\"\n            onClick={ () => { favorite(favorited, setFavorited, item); } }\n            src={ (favorited) ? blackHeartIcon : whiteHeartIcon }\n            alt=\"share\"\n          />\n          <p data-testid=\"recipe-category\">{item.strAlcoholic}</p>\n          <ul className=\"checkbox-list\">\n            {ingredientIndex.map((index) => {\n              const srt = `${item[`strMeasure${index + 1}`]}`;\n              if (srt === 'null' || srt === '' || srt === ' ') return '';\n              ingredientList += 1;\n              return (\n                <li\n                  key={ index }\n                  data-testid={ `${index}-ingredient-step` }\n                  className=\"checkedBox-false\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    key={ index }\n                    value={ item[`strMeasure${index + 1}`] }\n                    onClick={ handleCheckedBox }\n                    // checked={ data[index] }\n                  />\n                  {`${item[`strMeasure${index + 1}`]}`\n                  + ` ${item[`strIngredient${index + 1}`]}`}\n                </li>\n              );\n            })}\n          </ul>\n          <p data-testid=\"instructions\">{item.strInstructions}</p>\n          <button\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            className=\"page-buttons finalizar-receita\"\n            disabled={ disableButton }\n            onClick={ () => handleClick() }\n          >\n            Finalizar Receita\n          </button>\n        </div>\n      ))}\n    </section>\n  );\n}\n\nCardDrinkInProgress.propTypes = {\n  alreadyFavorited: PropTypes.bool.isRequired,\n  idDaReceita: PropTypes.string.isRequired,\n};\n\nexport default CardDrinkInProgress;\n","export function setLocalStorageDoneRecipesDrinks(detailDrinks, date) {\n  const previousDoceRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (previousDoceRecipes) {\n    localStorage.setItem('doneRecipes', JSON.stringify(\n      [...previousDoceRecipes,\n        {\n          id: detailDrinks[0].idDrink,\n          type: 'bebida',\n          area: '',\n          category: detailDrinks[0].strCategory,\n          alcoholicOrNot: detailDrinks[0].strAlcoholic,\n          name: detailDrinks[0].strDrink,\n          image: detailDrinks[0].strDrinkThumb,\n          doneDate: date,\n          tags: [detailDrinks[0].strTags],\n        },\n      ],\n    ));\n  } else {\n    localStorage.setItem('doneRecipes', JSON.stringify(\n      [\n        {\n          id: detailDrinks[0].idDrink,\n          type: 'bebida',\n          area: '',\n          category: detailDrinks[0].strCategory,\n          alcoholicOrNot: detailDrinks[0].strAlcoholic,\n          name: detailDrinks[0].strDrink,\n          image: detailDrinks[0].strDrinkThumb,\n          doneDate: date,\n          tags: [detailDrinks[0].strTags],\n        },\n      ],\n    ));\n  }\n}\n\nexport function setLocalStorageDoneRecipesFoods(detailFoods, date) {\n  const previousDoceRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  return previousDoceRecipes ? (\n    localStorage.setItem('doneRecipes', JSON.stringify(\n      [...previousDoceRecipes,\n        {\n          id: detailFoods[0].idMeal,\n          type: 'comida',\n          area: detailFoods[0].strArea,\n          category: detailFoods[0].strCategory,\n          alcoholicOrNot: '',\n          name: detailFoods[0].strMeal,\n          image: detailFoods[0].strMealThumb,\n          doneDate: date,\n          tags: [detailFoods[0].strTags],\n        },\n      ],\n    ))\n  ) : (localStorage.setItem('doneRecipes', JSON.stringify(\n    [\n      {\n        id: detailFoods[0].idMeal,\n        type: 'comida',\n        area: detailFoods[0].strArea,\n        category: detailFoods[0].strCategory,\n        alcoholicOrNot: '',\n        name: detailFoods[0].strMeal,\n        image: detailFoods[0].strMealThumb,\n        doneDate: date,\n        tags: [detailFoods[0].strTags],\n      },\n    ],\n  )));\n}\n","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { requestDrinkId } from '../../../services/API';\nimport DrinkContext from '../../../context/bebidaContext/DrinkContext';\nimport CardDrinkInProgress from '../../../components/Card/CardDrinkInProgress';\n\nfunction BebidaProgresso() {\n  const {\n    functions: {\n      setDetailsDrinks,\n    },\n  } = useContext(DrinkContext);\n\n  const { idDaReceita } = useParams();\n\n  useEffect(() => {\n    const fetchDrink = async () => {\n      const request = await requestDrinkId(idDaReceita);\n      setDetailsDrinks(request.drinks);\n    };\n    fetchDrink();\n  }, [setDetailsDrinks, idDaReceita]);\n\n  useEffect(() => {\n    if (localStorage.getItem('favoriteRecipes') === null) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      const obj = { cocktails: {}, meals: {} };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n    }\n    if (localStorage.getItem('checkedItems') === null) {\n      localStorage.setItem('checkedItems', JSON.stringify({}));\n    }\n  }, []);\n\n  let alreadyFavorited = false;\n  if (JSON.parse(localStorage.getItem('favoriteRecipes') !== null)) {\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    alreadyFavorited = favorites.some((obj) => obj.id === idDaReceita);\n  }\n\n  return (\n    <section>\n      <CardDrinkInProgress\n        alreadyFavorited={ alreadyFavorited }\n        idDaReceita={ idDaReceita }\n      />\n    </section>\n  );\n}\n\nexport default BebidaProgresso;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport GlobalContext from '../../context/globalContext/GlobalContext';\nimport '../../index.css';\n\nfunction CardFood({ foods }) {\n  const {\n    values: {\n      filteredMeals,\n    },\n  } = useContext(GlobalContext);\n\n  const maxCards = 12;\n  const data = (filteredMeals.length === 0) ? foods : filteredMeals;\n\n  if (foods === undefined) return '';\n\n  return (\n    <section className=\"recipe-card-container\">\n      {data.map(({ strMeal, strMealThumb, idMeal }, index) => {\n        if (index >= maxCards) return '';\n        return (\n          <Link\n            src={ strMealThumb }\n            to={ `/comidas/${idMeal}` }\n            key={ strMeal }\n            data-testid={ `${index}-recipe-card` }\n            className=\"recipe-card\"\n          >\n            <img\n              src={ strMealThumb }\n              alt={ strMeal }\n              data-testid={ `${index}-card-img` }\n            />\n            <p data-testid={ `${index}-card-name` }>{strMeal}</p>\n          </Link>\n        );\n      })}\n    </section>\n  );\n}\n\nCardFood.propTypes = {\n  foods: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CardFood;\n","import { createContext } from 'react';\n\nconst FoodContext = createContext();\n\nexport default FoodContext;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport FoodContext from '../../context/comidaContext/FoodContext';\nimport {\n  SearchMealByIngredient,\n  SearchMealByName,\n  SearchMealByFirstLetter,\n} from '../../services/API';\nimport { alertSearchRecipeNotFound, alertSearchACaracter } from '../../serviceWorker';\n\nfunction SearchBarFood() {\n  const {\n    values: {\n      searchInput,\n      searchType,\n      foods,\n    },\n    functions: {\n      handleSearchInput,\n      handleSearchType,\n      setFoods,\n    },\n  } = useContext(FoodContext);\n\n  const [redirect, setRedirect] = useState(false);\n  const [path, setPath] = useState(false);\n\n  useEffect(() => {\n    if (foods.length === 1) {\n      setRedirect(true);\n      setPath(`/comidas/${foods[0].idMeal}`);\n    }\n  }, [foods]);\n\n  const requestAPI = async () => {\n    if (searchType === 'first-letter-search' && searchInput.length > 1) {\n      alertSearchACaracter();\n      return '';\n    }\n    let response = '';\n    if (searchType === 'ingredient-search') {\n      response = await SearchMealByIngredient(searchInput);\n    }\n    if (searchType === 'name-search') {\n      response = await SearchMealByName(searchInput);\n    }\n    if (searchType === 'first-letter-search') {\n      response = await SearchMealByFirstLetter(searchInput);\n    }\n    if (response.meals !== null && searchType !== '') {\n      return setFoods(response.meals);\n    }\n    alertSearchRecipeNotFound();\n  };\n\n  if (redirect) return <Redirect to={ path } />;\n\n  return (\n    <section className=\"search-bar-container\">\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        value={ searchInput }\n        onChange={ handleSearchInput }\n        className=\"input-field\"\n      />\n      <label htmlFor=\"ingredient-search\">\n        <input\n          id=\"ingredient-search\"\n          type=\"radio\"\n          name=\"search\"\n          data-testid=\"ingredient-search-radio\"\n          onChange={ handleSearchType }\n          value=\"ingredient-search\"\n        />\n        Buscar por ingrediente\n      </label>\n      <label htmlFor=\"name-search\">\n        <input\n          id=\"name-search\"\n          type=\"radio\"\n          name=\"search\"\n          data-testid=\"name-search-radio\"\n          onChange={ handleSearchType }\n          value=\"name-search\"\n        />\n        Buscar por nome\n      </label>\n      <label htmlFor=\"first-letter-search\">\n        <input\n          id=\"first-letter-search\"\n          type=\"radio\"\n          name=\"search\"\n          data-testid=\"first-letter-search-radio\"\n          onChange={ handleSearchType }\n          value=\"first-letter-search\"\n        />\n        Buscar pela primeira letra\n      </label>\n      <button\n        data-testid=\"exec-search-btn\"\n        type=\"button\"\n        onClick={ requestAPI }\n        className=\"page-buttons\"\n      >\n        Procurar\n      </button>\n    </section>\n  );\n}\n\nexport default SearchBarFood;\n","import React, { useContext } from 'react';\nimport GlobalContext from '../../context/globalContext/GlobalContext';\n\nfunction FoodCategoryBar() {\n  const {\n    values: { foodCategory },\n    functions: { handleFilteredMeals },\n  } = useContext(GlobalContext);\n\n  const maxCategories = 5;\n\n  return (\n    <div className=\"search-button-container\">\n      <button\n        type=\"button\"\n        key=\"All\"\n        data-testid=\"All-category-filter\"\n        className=\"page-buttons\"\n        onClick={ handleFilteredMeals }\n      >\n        All\n      </button>\n      {foodCategory.map(({ strCategory }, index) => {\n        if (index >= maxCategories) {\n          return '';\n        }\n        return (\n          <button\n            type=\"button\"\n            key={ strCategory }\n            data-testid={ `${strCategory}-category-filter` }\n            className=\"page-buttons\"\n            onClick={ handleFilteredMeals }\n          >\n            {strCategory}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FoodCategoryBar;\n","import React, { useContext } from 'react';\nimport Header from '../../components/Header';\nimport CardFood from '../../components/Card/CardFood';\nimport SearchBarFood from '../../components/SearchBar/SearchBarFood';\nimport Footer from '../../components/footer';\nimport FoodCategoryBar from '../../components/CategoryBar/FoodCategoryBar';\nimport FoodContext from '../../context/comidaContext/FoodContext';\n\nfunction Comida() {\n  const {\n    values: {\n      foods,\n      filteredMeals,\n    },\n  } = useContext(FoodContext);\n  return (\n    <section>\n      <Header component={ <SearchBarFood /> }>Comidas</Header>\n      <FoodCategoryBar />\n      <CardFood foods={ foods } filteredMeals={ filteredMeals } />\n      <Footer />\n    </section>\n  );\n}\n\nexport default Comida;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport FoodContext from '../../context/comidaContext/FoodContext';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport '../../index.css';\n\nfunction copyToClipboard(id, callback) {\n  navigator.clipboard.writeText(`http://localhost:3000/comidas/${id}`);\n  callback(true);\n}\n\nfunction favorite(isFavorited, callback, item) {\n  const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (isFavorited) {\n    const newFavorites = favorites\n      .filter((foodOrDrink) => foodOrDrink.id !== item.idMeal);\n    callback(false);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n  } else {\n    const newFavorites = [...favorites, {\n      id: item.idMeal,\n      type: 'comida',\n      area: item.strArea,\n      category: item.strCategory,\n      alcoholicOrNot: '',\n      name: item.strMeal,\n      image: item.strMealThumb,\n    }];\n    callback(true);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n  }\n}\n\nfunction CardFoodDetails({ alreadyFavorited, idDaReceita }) {\n  const {\n    values: {\n      detailFoods,\n    },\n  } = useContext(FoodContext);\n\n  const LAST_INGREDIENT = 20;\n  const ingredientIndex = [];\n  for (let index = 0; index < LAST_INGREDIENT; index += 1) {\n    ingredientIndex.push(index);\n  }\n\n  const [isCopied, setIsCopied] = useState(false);\n  const [favorited, setFavorited] = useState(alreadyFavorited);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const ingredients = [];\n  const recipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const recipeStarted = Object.keys(recipes.meals).some((id) => id === idDaReceita);\n  function startRecipe() {\n    const newMeals = { ...recipes, meals: { [idDaReceita]: ingredients } };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newMeals));\n    setRedirect(true);\n  }\n\n  const recipesDone = JSON.parse(localStorage.getItem('doneRecipes'));\n  const recipeFinished = recipesDone.some((item) => item.id === idDaReceita);\n\n  if (redirect) return <Redirect to={ `/comidas/${idDaReceita}/in-progress` } />;\n\n  return (\n    <section>\n      {detailFoods.map((item) => (\n        <div key={ item.strMeal } className=\"imageDetails\">\n          <img\n            src={ item.strMealThumb }\n            alt={ item.strMeal }\n            data-testid=\"recipe-photo\"\n          />\n          <h3 data-testid=\"recipe-title\">{item.strMeal}</h3>\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            onClick={ () => { copyToClipboard(idDaReceita, setIsCopied); } }\n            src={ shareIcon }\n            alt=\"share\"\n          />\n          {isCopied && <p>Link copiado!</p>}\n          <input\n            type=\"image\"\n            data-testid=\"favorite-btn\"\n            onClick={ () => { favorite(favorited, setFavorited, item); } }\n            src={ (favorited) ? blackHeartIcon : whiteHeartIcon }\n            alt=\"share\"\n          />\n          <p data-testid=\"recipe-category\">{item.strCategory}</p>\n          <ul>\n            {ingredientIndex.map((index) => {\n              const srt = `${item[`strMeasure${index + 1}`]}`;\n              if (srt === 'null' || srt === '' || srt === ' ') return '';\n              ingredients.push(`${srt} ${item[`strIngredient${index + 1}`]}`);\n              return (\n                <li key={ index } data-testid={ `${index}-ingredient-name-and-measure` }>\n                  {`${srt} ${item[`strIngredient${index + 1}`]}`}\n                </li>\n              );\n            })}\n          </ul>\n          <p data-testid=\"instructions\">{item.strInstructions}</p>\n          <p data-testid=\"video\">{item.strYoutube}</p>\n        </div>\n      ))}\n      {!recipeFinished\n      && (\n        <button\n          type=\"button\"\n          onClick={ () => { startRecipe(); } }\n          className=\"page-buttons start-recipe\"\n          data-testid=\"start-recipe-btn\"\n        >\n          {(recipeStarted) ? 'Continuar Receita' : 'Iniciar Receita'}\n        </button>)}\n    </section>\n  );\n}\n\nCardFoodDetails.propTypes = {\n  alreadyFavorited: PropTypes.bool.isRequired,\n  idDaReceita: PropTypes.string.isRequired,\n};\n\nexport default CardFoodDetails;\n","import React, { useContext } from 'react';\nimport FoodContext from '../../context/comidaContext/FoodContext';\nimport '../../index.css';\n\nfunction DrinkRecomendation() {\n  const {\n    values: {\n      recomendations,\n    },\n  } = useContext(FoodContext);\n\n  const LAST_CARD_CAROUSEL = 6;\n\n  return (\n    <div className=\"recommendation\">\n      {recomendations.map((item, index) => {\n        if (index >= LAST_CARD_CAROUSEL) return '';\n        return (\n          <div\n            key={ item.strDrink }\n            className=\"recommendation-item\"\n            data-testid={ `${index}-recomendation-card` }\n          >\n            <img\n              src={ item.strDrinkThumb }\n              alt={ item.strDrink }\n              data-testid={ `${index}-card-img` }\n            />\n            <p data-testid={ `${index}-recomendation-title` }>\n              {item.strDrink}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default DrinkRecomendation;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { requestDrinkRecipe, requestFoodId } from '../../../services/API';\nimport FoodContext from '../../../context/comidaContext/FoodContext';\nimport CardFoodDetails from '../../../components/Card/CardFoodDetails';\nimport DrinkRecomendation from '../../../components/Carousel/DrinkRecomendation';\n\nfunction ComidaDetalhes() {\n  const {\n    functions: {\n      setDetailsFoods,\n      setRecomendations,\n    },\n  } = useContext(FoodContext);\n\n  const { idDaReceita } = useParams();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (localStorage.getItem('favoriteRecipes') === null) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      const obj = { cocktails: {}, meals: {} };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n    }\n    if (localStorage.getItem('doneRecipes') === null) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    const fetchFood = async () => {\n      const request = await requestFoodId(idDaReceita);\n      setDetailsFoods(request.meals);\n    };\n    fetchFood();\n  }, [setDetailsFoods, idDaReceita]);\n\n  useEffect(() => {\n    const fetchDrinks = async () => {\n      const request = await requestDrinkRecipe();\n      setRecomendations(request.drinks);\n    };\n    fetchDrinks();\n  }, [setRecomendations]);\n\n  let alreadyFavorited = false;\n  if (JSON.parse(localStorage.getItem('favoriteRecipes') !== null)) {\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    alreadyFavorited = favorites.some((obj) => obj.id === idDaReceita);\n  }\n\n  return (\n    <section>\n      {!loading\n      && (\n        <>\n          <CardFoodDetails\n            alreadyFavorited={ alreadyFavorited }\n            idDaReceita={ idDaReceita }\n          />\n          <DrinkRecomendation />\n        </>)}\n    </section>\n\n  );\n}\n\nexport default ComidaDetalhes;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport FoodContext from '../../context/comidaContext/FoodContext';\nimport { setLocalStorageDoneRecipesFoods } from '../../services/LocalStorage';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport '../../index.css';\n\nfunction copyToClipboard(id, callback) {\n  navigator.clipboard.writeText(`http://localhost:3000/comidas/${id}`);\n  callback(true);\n}\n\n// function mealProgress(index) {\n//   const checkedbox = JSON.parse(localStorage.getItem('checkedItems'));\n//   const checkedboxStorage = Object.keys(checkedbox).some((id) => id === idDaReceita);\n//   if (checkedboxStorage) {\n//     const data = checkedbox[idDaReceita];\n//   } else {\n//   }\n// }\n\nfunction favorite(isFavorited, callback, item) {\n  const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (isFavorited) {\n    const newFavorites = favorites\n      .filter((foodOrDrink) => foodOrDrink.id !== item.idMeal);\n    callback(false);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n  } else {\n    const newFavorites = [...favorites, {\n      id: item.idMeal,\n      type: 'comida',\n      area: item.strArea,\n      category: item.strCategory,\n      alcoholicOrNot: '',\n      name: item.strMeal,\n      image: item.strMealThumb,\n    }];\n    callback(true);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n  }\n}\n\nfunction CardFoodInProgress({ alreadyFavorited, idDaReceita }) {\n  const {\n    values: {\n      detailFoods,\n    },\n    functions: {\n      setDoneRecipe,\n    },\n  } = useContext(FoodContext);\n  const date = new Date().toLocaleDateString();\n\n  const [redirect, setRedirect] = useState(false);\n\n  const handleClick = () => {\n    setLocalStorageDoneRecipesFoods(detailFoods, date);\n    setDoneRecipe(detailFoods.strMeal);\n    setRedirect(true);\n  };\n\n  const [disableButton, setDisableButton] = useState(true);\n\n  let checkButton = 0;\n  let ingredientList = 0;\n\n  const disabledButton = () => {\n    if (checkButton === ingredientList) {\n      setDisableButton(false);\n    } else {\n      setDisableButton(true);\n    }\n  };\n\n  const LAST_INGREDIENT = 20;\n  const ingredientIndex = [];\n  for (let index = 0; index < LAST_INGREDIENT; index += 1) {\n    ingredientIndex.push(index);\n  }\n\n  // const checkedbox = JSON.parse(localStorage.getItem('checkedItems'));\n  // const checkedboxStorage = Object.keys(checkedbox).some((id) => id === idDaReceita);\n  // let data = [];\n  // if (checkedboxStorage) {\n  //   data = checkedbox[idDaReceita];\n  // } else {\n  //   for (let index = 0; index < LAST_INGREDIENT; index += 1) {\n  //     data.push(false);\n  //   }\n  //   const obj = { [idDaReceita]: data };\n  //   localStorage.setItem('checkedItems', { ...checkedbox, ...obj });\n  // }\n\n  const handleCheckedBox = (event) => {\n    const { parentNode } = event.target;\n    const { checked } = event.target;\n    if (checked) {\n      parentNode.className = 'checkedBox-true';\n      checkButton += 1;\n      // data[index] = true;\n      // const obj = { [idDaReceita]: data };\n      // localStorage.setItem('checkedItems', { ...checkedbox, ...obj });\n    } else {\n      parentNode.className = 'checkedBox-false';\n      checkButton -= 1;\n      // data[index] = false;\n      // const obj = { [idDaReceita]: data };\n      // localStorage.setItem('checkedItems', { ...checkedbox, ...obj });\n    }\n    disabledButton();\n  };\n\n  const [isCopied, setIsCopied] = useState(false);\n  const [favorited, setFavorited] = useState(alreadyFavorited);\n\n  if (redirect) return <Redirect to=\"/receitas-feitas\" />;\n\n  return (\n    <section>\n      {detailFoods.map((item) => (\n        <div key={ item.strMeal } className=\"imageDetails\">\n          <img\n            src={ item.strMealThumb }\n            alt={ item.strMeal }\n            data-testid=\"recipe-photo\"\n          />\n          <h3 data-testid=\"recipe-title\">{item.strMeal}</h3>\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            onClick={ () => { copyToClipboard(idDaReceita, setIsCopied); } }\n            src={ shareIcon }\n            alt=\"share\"\n          />\n          {isCopied && <p>Link copiado!</p>}\n          <input\n            type=\"image\"\n            data-testid=\"favorite-btn\"\n            onClick={ () => { favorite(favorited, setFavorited, item); } }\n            src={ (favorited) ? blackHeartIcon : whiteHeartIcon }\n            alt=\"share\"\n          />\n          <p data-testid=\"recipe-category\">{item.strCategory}</p>\n          <ul className=\"checkbox-list\">\n            {ingredientIndex.map((index) => {\n              const srt = `${item[`strMeasure${index + 1}`]}`;\n              if (srt === 'null' || srt === '' || srt === ' ') return '';\n              ingredientList += 1;\n              return (\n                <li\n                  key={ index }\n                  data-testid={ `${index}-ingredient-step` }\n                  className=\"checkedBox-false\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    // id={ `${item.idMeal}-${index}` }\n                    key={ index }\n                    value={ item[`strMeasure${index + 1}`] }\n                    onClick={ handleCheckedBox }\n                    // checked={ data[index] }\n                  />\n                  {`${item[`strMeasure${index + 1}`]}`\n                  + ` ${item[`strIngredient${index + 1}`]}`}\n                </li>\n              );\n            })}\n          </ul>\n          <p data-testid=\"instructions\">{item.strInstructions}</p>\n          <button\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            className=\"page-buttons finalizar-receita\"\n            disabled={ disableButton }\n            onClick={ () => handleClick() }\n          >\n            Finalizar Receita\n          </button>\n        </div>\n      ))}\n    </section>\n  );\n}\n\nCardFoodInProgress.propTypes = {\n  alreadyFavorited: PropTypes.bool.isRequired,\n  idDaReceita: PropTypes.string.isRequired,\n};\n\nexport default CardFoodInProgress;\n","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { requestFoodId } from '../../../services/API';\nimport FoodContext from '../../../context/comidaContext/FoodContext';\nimport CardFoodInProgress from '../../../components/Card/CardFoodInProgress';\n\nfunction ComidaProgresso() {\n  const {\n    functions: {\n      setDetailsFoods,\n    },\n  } = useContext(FoodContext);\n\n  const { idDaReceita } = useParams();\n\n  useEffect(() => {\n    const fetchFood = async () => {\n      const request = await requestFoodId(idDaReceita);\n      setDetailsFoods(request.meals);\n    };\n    fetchFood();\n  }, [setDetailsFoods, idDaReceita]);\n\n  useEffect(() => {\n    if (localStorage.getItem('favoriteRecipes') === null) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      const obj = { cocktails: {}, meals: {} };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n    }\n    if (localStorage.getItem('checkedItems') === null) {\n      localStorage.setItem('checkedItems', JSON.stringify({}));\n    }\n  }, []);\n\n  let alreadyFavorited = false;\n  if (JSON.parse(localStorage.getItem('favoriteRecipes') !== null)) {\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    alreadyFavorited = favorites.some((obj) => obj.id === idDaReceita);\n  }\n\n  return (\n    <section>\n      <CardFoodInProgress\n        alreadyFavorited={ alreadyFavorited }\n        idDaReceita={ idDaReceita }\n      />\n    </section>\n  );\n}\n\nexport default ComidaProgresso;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/footer';\n\nfunction Explorar() {\n  return (\n    <>\n      <Header explore=\"false\">Explorar</Header>\n      <section className=\"explore-container\">\n        <Link to=\"/explorar/comidas\">\n          <button type=\"button\" data-testid=\"explore-food\" className=\"page-buttons\">\n            Explorar Comidas\n          </button>\n        </Link>\n        <Link to=\"/explorar/bebidas\" data-testid=\"explore-drinks\">\n          <button type=\"button\" className=\"page-buttons\">\n            Explorar Bebidas\n          </button>\n        </Link>\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nexport default Explorar;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Header from '../../../components/Header';\nimport Footer from '../../../components/footer';\n\nimport { getRandomFood } from '../../../services/API';\n\nfunction ExplorarComida() {\n  const [idFood, setIdFood] = useState();\n\n  useEffect(() => {\n    getRandomFood().then(({ meals: [{ idMeal }] }) => setIdFood(idMeal));\n  }, []);\n  return (\n    <>\n      <Header explore=\"false\">Explorar Comidas</Header>\n      <section className=\"explore-container\">\n        <Link to=\"/explorar/comidas/ingredientes\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n            className=\"page-buttons\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to=\"/explorar/comidas/area\">\n          <button type=\"button\" data-testid=\"explore-by-area\" className=\"page-buttons\">\n            Por Local de Origem\n          </button>\n        </Link>\n        <Link to={ `/comidas/${idFood}` }>\n          <button type=\"button\" data-testid=\"explore-surprise\" className=\"page-buttons\">\n            Me Surpreenda!\n          </button>\n        </Link>\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nexport default ExplorarComida;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../../../components/Header';\nimport Footer from '../../../components/footer';\nimport { getRandomDrink } from '../../../services/API';\n\nfunction ExplorarBebida() {\n  const [drinkId, setDrinkId] = useState([]);\n\n  useEffect(() => {\n    getRandomDrink().then(({ drinks: [{ idDrink }] }) => setDrinkId(idDrink));\n  }, []);\n\n  return (\n    <>\n      <Header explore=\"false\">Explorar Bebidas</Header>\n      <section>\n        <Link to=\"/explorar/bebidas/ingredientes\">\n          <button type=\"button\" data-testid=\"explore-by-ingredient\">\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to={ `/bebidas/${drinkId}` }>\n          <button type=\"button\" data-testid=\"explore-surprise\">\n            Me Surpreenda!\n          </button>\n        </Link>\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nexport default ExplorarBebida;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../../../../components/Header';\nimport Footer from '../../../../components/footer';\nimport { requestIngredientsMeal } from '../../../../services/API';\nimport GlobalContext from '../../../../context/globalContext/GlobalContext';\n\nfunction ComidaIngredientes() {\n  const [ingredients, setIngredients] = useState([]);\n  const [ingredientsImages, setIngredientsImages] = useState([]);\n  const { functions: { handleExploreIngredients } } = useContext(GlobalContext);\n\n  const mountImage = (array) => {\n    const path = 'https://www.themealdb.com/images/ingredients/';\n    const ingredientsNames = array.map((item) => item);\n    const correctPaths = ingredientsNames\n      .map((item) => `${path}${item}-Small.png`);\n    setIngredientsImages(correctPaths);\n  };\n\n  useEffect(() => {\n    const fetchIngredients = async () => {\n      const result = await requestIngredientsMeal();\n      const maxIngredients = 12;\n      const listIngredients = [];\n      for (let i = 0; i < maxIngredients; i += 1) {\n        listIngredients.push(result.meals[i].strIngredient);\n      }\n      setIngredients(listIngredients);\n      mountImage(listIngredients);\n    };\n    fetchIngredients();\n  }, []);\n\n  return (\n    <>\n      <Header explore=\"false\">Explorar Ingredientes</Header>\n      <section className=\"search-results-container\">\n        {ingredients && ingredients.map((ingredient, index) => (\n          <button\n            key={ ingredient }\n            type=\"button\"\n            onClick={ handleExploreIngredients }\n            className=\"page-buttons search-results\"\n          >\n            <Link to=\"/comidas\" type=\"button\">\n              <div data-testid={ `${index}-ingredient-card` }>\n                <img\n                  src={ ingredientsImages[index] }\n                  alt={ ingredient }\n                  data-testid={ `${index}-card-img` }\n                />\n                <p data-testid={ `${index}-card-name` }>\n                  { ingredient }\n                </p>\n              </div>\n            </Link>\n          </button>\n        ))}\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nexport default ComidaIngredientes;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../../../../components/Header';\nimport Footer from '../../../../components/footer';\nimport { requestIngredientsDrinks } from '../../../../services/API';\nimport GlobalContext from '../../../../context/globalContext/GlobalContext';\n\nfunction BebidaIngredientes() {\n  const [ingredients, setIngredients] = useState([]);\n  const [ingredientsImages, setIngredientsImages] = useState([]);\n  const { functions: { handleExploreIngredients } } = useContext(GlobalContext);\n\n  const mountImage = (array) => {\n    const path = 'https://www.thecocktaildb.com/images/ingredients/';\n    const ingredientsNames = array.map((item) => item);\n    const correctPaths = ingredientsNames\n      .map((item) => `${path}${item}-Small.png`);\n    setIngredientsImages(correctPaths);\n  };\n\n  useEffect(() => {\n    const fetchIngredients = async () => {\n      const result = await requestIngredientsDrinks();\n      const maxIngredients = 12;\n      const listIngredients = [];\n      for (let i = 0; i < maxIngredients; i += 1) {\n        listIngredients.push(result.drinks[i].strIngredient1);\n      }\n      setIngredients(listIngredients);\n      mountImage(listIngredients);\n    };\n    fetchIngredients();\n  }, []);\n\n  return (\n    <>\n      <Header explore=\"false\">Explorar Ingredientes</Header>\n      {ingredients && ingredients.map((ingredient, index) => (\n        <button\n          key={ ingredient }\n          type=\"button\"\n          onClick={ handleExploreIngredients }\n        >\n          <Link to=\"/bebidas\">\n            <div data-testid={ `${index}-ingredient-card` }>\n              <img\n                src={ ingredientsImages[index] }\n                alt={ ingredient }\n                data-testid={ `${index}-card-img` }\n              />\n              <p data-testid={ `${index}-card-name` }>\n                { ingredient }\n              </p>\n            </div>\n          </Link>\n        </button>\n      ))}\n      <Footer />\n    </>\n  );\n}\n\nexport default BebidaIngredientes;\n","import React, { useEffect, useState } from 'react';\n\nimport { getListAllAreaOfTheFood, getFoodByArea,\n  requestMealRecipe } from '../../../../services/API';\n\nimport Header from '../../../../components/Header';\nimport Footer from '../../../../components/footer';\nimport CardFood from '../../../../components/Card/CardFood';\n\nfunction ComidaArea() {\n  const [area, setArea] = useState([]);\n  const [selectedArea, setSelectedArea] = useState('All');\n  const [foodByArea, setFoodByArea] = useState([]);\n\n  useEffect(() => {\n    getListAllAreaOfTheFood()\n      .then(({ meals }) => setArea([{ strArea: 'All' }, ...meals]));\n  }, []);\n\n  const handleSelectedArea = ({ target: { value } }) => setSelectedArea(value);\n\n  useEffect(() => {\n    if (selectedArea.includes('All')) {\n      requestMealRecipe()\n        .then(({ meals }) => setFoodByArea(meals));\n    }\n    getFoodByArea(selectedArea).then(({ meals }) => setFoodByArea(meals));\n  }, [selectedArea]);\n  console.log(foodByArea);\n\n  return (\n    <>\n      <Header>Explorar Origem</Header>\n      <select\n        data-testid=\"explore-by-area-dropdown\"\n        value={ selectedArea }\n        onChange={ handleSelectedArea }\n      >\n        {area.map(({ strArea }, index) => (\n          <option\n            key={ index }\n            value={ strArea }\n            data-testid={ `${strArea}-option` }\n          >\n            {strArea}\n          </option>\n        ))}\n      </select>\n      {foodByArea && <CardFood foods={ foodByArea } />}\n      <Footer />\n    </>\n  );\n}\n\nexport default ComidaArea;\n","import React from 'react';\nimport Header from '../../../../components/Header';\nimport Footer from '../../../../components/footer';\n\nfunction BebidaArea() {\n  return (\n    <>\n      <Header />\n      <h2>Not Found</h2>\n      <Footer />\n    </>\n  );\n}\n\nexport default BebidaArea;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../../components/footer';\nimport Header from '../../components/Header';\n\nfunction Perfil() {\n  const logout = () => {\n    localStorage.clear();\n  };\n\n  const userEmail = JSON.parse(localStorage.getItem('user')) || '';\n\n  return (\n    <>\n      <Header explore=\"false\">Perfil</Header>\n      <section className=\"profile-container\">\n        <p\n          data-testid=\"profile-email\"\n        >\n          { userEmail.email }\n        </p>\n        <div className=\"profile-buttons-container\">\n          <button\n            data-testid=\"profile-done-btn\"\n            type=\"button\"\n            className=\"page-buttons\"\n          >\n            <Link to=\"/receitas-feitas\">\n              Receitas Feitas\n            </Link>\n          </button>\n          <button\n            data-testid=\"profile-favorite-btn\"\n            type=\"button\"\n            className=\"page-buttons\"\n          >\n            <Link to=\"/receitas-favoritas\">\n              Receitas Favoritas\n            </Link>\n          </button>\n          <button\n            data-testid=\"profile-logout-btn\"\n            type=\"button\"\n            className=\"page-buttons\"\n            onClick={ logout }\n          >\n            <Link to=\"/recipes-app\">\n              Sair\n            </Link>\n          </button>\n        </div>\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nexport default Perfil;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport Header from '../../components/Header';\nimport shareIcon from '../../images/shareIcon.svg';\n\nfunction ReceitasFeitas() {\n  const doneRecipesStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [doneReceipes, setDoneRecipes] = useState(doneRecipesStorage);\n  const [copied, setCopied] = useState(false);\n\n  const filterRecipes = (filter) => {\n    const filtered = !filter\n      ? doneRecipesStorage\n      : doneRecipesStorage.filter((recipe) => filter === recipe.type);\n    setDoneRecipes(filtered);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('doneRecipes') === null) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n  }, []);\n\n  const copyL = (allRecipe) => {\n    copy(`http://localhost:3000/${allRecipe.type}s/${allRecipe.id}`);\n    setCopied(true);\n  };\n\n  return (\n    <>\n      <Header explore=\"false\">Receitas Feitas</Header>\n      <section>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => filterRecipes('') }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => filterRecipes('comida') }\n        >\n          Comidas\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => filterRecipes('bebida') }\n        >\n          Bebidas\n        </button>\n      </section>\n      <section>\n        {doneReceipes && doneReceipes.map((recipe, index) => (\n          <section key={ recipe.id }>\n            <Link to={ `/${recipe.type}s/${recipe.id}` }>\n              <img\n                style={ { width: '100vw' } }\n                src={ recipe.image }\n                data-testid={ `${index}-horizontal-image` }\n                alt={ recipe.name }\n              />\n            </Link>\n            <p data-testid={ `${index}-horizontal-top-text` }>\n              {recipe.type === 'comida'\n                ? `${recipe.area} - ${recipe.category}`\n                : `${recipe.alcoholicOrNot}`}\n            </p>\n            <Link\n              to={ `/${recipe.type}s/${recipe.id}` }\n              data-testid={ `${index}-horizontal-name` }\n            >\n              { recipe.name }\n            </Link>\n            <button\n              type=\"button\"\n              onClick={ () => copyL(recipe) }\n            >\n              <img\n                src={ shareIcon }\n                data-testid={ `${index}-horizontal-share-btn` }\n                alt=\"Share Button\"\n              />\n              {copied && <p>Link copiado!</p>}\n            </button>\n            <p data-testid={ `${index}-horizontal-done-date` }>\n              { recipe.doneDate }\n            </p>\n            {recipe.tags.map((tag) => (\n              <span key={ tag } data-testid={ `${index}-${tag}-horizontal-tag` }>\n                { tag }\n              </span>\n            ))}\n          </section>\n        ))}\n      </section>\n    </>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport Header from '../../components/Header';\n\nfunction ReceitasFavoritas() {\n  const favoriteRecipesStorage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const [favoriteRecipes, setFavoriteRecipes] = useState(favoriteRecipesStorage);\n  const [copied, setCopied] = useState(false);\n\n  const filterRecipes = (filter) => {\n    const filtered = !filter\n      ? favoriteRecipesStorage\n      : favoriteRecipesStorage.filter((recipe) => filter === recipe.type);\n    setFavoriteRecipes(filtered);\n  };\n\n  const copyL = (allRecipe) => {\n    copy(`http://localhost:3000/${allRecipe.type}s/${allRecipe.id}`);\n    setCopied(true);\n  };\n\n  const notFavorite = (id) => {\n    const newFavRecipes = favoriteRecipes.filter((recipe) => recipe.id !== id);\n    const newFavRecipesString = JSON.stringify(newFavRecipes);\n    localStorage.setItem('favoriteRecipes', newFavRecipesString);\n    setFavoriteRecipes(newFavRecipes);\n  };\n\n  return (\n    <>\n      <Header explore=\"false\">Receitas Favoritas</Header>\n      <section>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => filterRecipes('') }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => filterRecipes('comida') }\n        >\n          Comidas\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => filterRecipes('bebida') }\n        >\n          Bebidas\n        </button>\n      </section>\n      <section>\n        {favoriteRecipes && favoriteRecipes.map((recipe, index) => (\n          <section key={ recipe.id }>\n            <Link to={ `/${recipe.type}s/${recipe.id}` }>\n              <img\n                style={ { width: '100vw' } }\n                src={ recipe.image }\n                data-testid={ `${index}-horizontal-image` }\n                alt={ recipe.name }\n              />\n            </Link>\n            <p data-testid={ `${index}-horizontal-top-text` }>\n              {recipe.type === 'comida'\n                ? `${recipe.area} - ${recipe.category}`\n                : `${recipe.alcoholicOrNot}`}\n            </p>\n            <Link\n              to={ `/${recipe.type}s/${recipe.id}` }\n              data-testid={ `${index}-horizontal-name` }\n            >\n              { recipe.name }\n            </Link>\n            <button\n              type=\"button\"\n              onClick={ () => copyL(recipe) }\n            >\n              <img\n                src={ shareIcon }\n                data-testid={ `${index}-horizontal-share-btn` }\n                alt=\"Share Button\"\n              />\n              {copied && <p>Link copiado!</p>}\n            </button>\n            <button\n              type=\"button\"\n              onClick={ () => notFavorite(recipe.id) }\n            >\n              <img\n                src={ blackHeartIcon }\n                data-testid={ `${index}-horizontal-favorite-btn` }\n                alt=\"Not Favorite Button\"\n              />\n            </button>\n          </section>\n        ))}\n      </section>\n    </>\n  );\n}\n\nexport default ReceitasFavoritas;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// https://stackoverflow.com/questions/50155909/how-to-use-context-api-with-react-router-v4/50158702#50158702\nfunction ContextRoute({ contextComponent, component, ...rest }) {\n  const Provider = contextComponent;\n  const Component = component;\n\n  return (\n    <Route { ...rest }>\n      <Provider>\n        <Component />\n      </Provider>\n    </Route>\n  );\n}\n\nContextRoute.propTypes = {\n  contextComponent: PropTypes.elementType.isRequired,\n  component: PropTypes.elementType.isRequired,\n};\n\nexport default ContextRoute;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from './UserContext';\n\nfunction UserProvider({ children }) {\n  const [password, setPassword] = useState('');\n  const handlePassword = ({ target }) => setPassword(target.value);\n\n  const provide = {\n    values: {\n      password,\n    },\n    functions: {\n      handlePassword,\n    },\n  };\n  return (\n    <UserContext.Provider value={ provide }>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nUserProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default UserProvider;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodContext from './FoodContext';\nimport { requestMealRecipe, SearchMealByIngredient } from '../../services/API';\nimport GlobalContext from '../globalContext/GlobalContext';\n\nfunction FoodProvider({ children }) {\n  const [searchInput, setSearchInput] = useState('');\n  const [searchType, setSearchType] = useState('');\n  const [foods, setFoods] = useState([]);\n  const { values: { fetchExploreIngredients,\n    exploreIngredients } } = useContext(GlobalContext);\n\n  const handleSearchInput = ({ target }) => setSearchInput(target.value);\n  const handleSearchType = ({ target }) => setSearchType(target.value);\n\n  useEffect(() => {\n    if (fetchExploreIngredients) {\n      SearchMealByIngredient(exploreIngredients).then(({ meals }) => setFoods(meals));\n    } else {\n      requestMealRecipe().then(({ meals }) => setFoods(meals));\n    }\n  }, [fetchExploreIngredients, exploreIngredients]);\n\n  const [detailFoods, setDetailsFoods] = useState([]);\n  const [recomendations, setRecomendations] = useState([]);\n\n  const [doneRecipe, setDoneRecipe] = useState([]);\n\n  const provide = {\n    values: {\n      searchInput,\n      searchType,\n      foods,\n      detailFoods,\n      recomendations,\n      doneRecipe,\n    },\n    functions: {\n      handleSearchInput,\n      handleSearchType,\n      setFoods,\n      setDetailsFoods,\n      setRecomendations,\n      setDoneRecipe,\n    },\n  };\n\n  return (\n    <FoodContext.Provider value={ provide }>\n      {children}\n    </FoodContext.Provider>\n  );\n}\n\nFoodProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default FoodProvider;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  requestDrinkRecipe,\n  requestDrinksCategory,\n  requestDrinksByCategory,\n  SearchCocktailByIngredient,\n} from '../../services/API';\nimport GlobalContext from '../globalContext/GlobalContext';\nimport DrinkContext from './DrinkContext';\n\nfunction DrinkProvider({ children }) {\n  const [searchInput, setSearchInput] = useState('');\n  const [searchType, setSearchType] = useState('');\n  const handleSearchInput = ({ target }) => setSearchInput(target.value);\n  const handleSearchType = ({ target }) => setSearchType(target.value);\n  const [currentCategory, setCurrentCategory] = useState('');\n\n  const [drinks, setDrinks] = useState([]);\n  const [drinksCategory, setDrinksCategory] = useState([]);\n  const [filteredDrinks, setFilteredDrinks] = useState([]);\n\n  const { values: { fetchExploreIngredients,\n    exploreIngredients } } = useContext(GlobalContext);\n  const handleFilteredDrinks = async ({ target }) => {\n    const categoryName = target.innerText;\n    if (categoryName === 'All') return setFilteredDrinks([]);\n    if (filteredDrinks.length === 0 || currentCategory !== categoryName) {\n      setCurrentCategory(categoryName);\n      const result = await requestDrinksByCategory(categoryName);\n      setFilteredDrinks(result.drinks);\n    } else {\n      setFilteredDrinks([]);\n    }\n  };\n\n  useEffect(() => {\n    if (fetchExploreIngredients) {\n      SearchCocktailByIngredient(exploreIngredients)\n        .then((result) => setDrinks(result.drinks));\n    } else {\n      requestDrinkRecipe().then((result) => setDrinks(result.drinks));\n    }\n  }, [exploreIngredients, fetchExploreIngredients]);\n\n  const [detailDrinks, setDetailsDrinks] = useState([]);\n  const [recomendations, setRecomendations] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await requestDrinksCategory();\n      setDrinksCategory(result.drinks);\n    };\n    fetchData();\n  }, []);\n\n  const [doneRecipe, setDoneRecipe] = useState([]);\n\n  const provide = {\n    values: {\n      searchInput,\n      searchType,\n      drinks,\n      drinksCategory,\n      filteredDrinks,\n      detailDrinks,\n      recomendations,\n      doneRecipe,\n    },\n    functions: {\n      handleSearchInput,\n      handleSearchType,\n      handleFilteredDrinks,\n      setDrinks,\n      setDetailsDrinks,\n      setRecomendations,\n      setDoneRecipe,\n    },\n  };\n  return (\n    <DrinkContext.Provider value={ provide }>{children}</DrinkContext.Provider>\n  );\n}\n\nDrinkProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default DrinkProvider;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Login, Bebida, BebidaDetalhes, Comida, ComidaDetalhes,\n  Explorar, ExplorarComida, ExplorarBebida, ComidaIngredientes,\n  BebidaIngredientes, ComidaArea, BebidaArea, Perfil, ReceitasFeitas,\n  ReceitasFavoritas } from '../pages';\nimport ContextRoute from '../context-route/ContextRoute';\nimport UserProvider from '../context/userContext/UserProvider';\nimport FoodProvider from '../context/comidaContext/FoodProvider';\nimport DrinkProvider from '../context/bebidaContext/DrinkProvider';\nimport GlobalProvider from '../context/globalContext/GlobalProvider';\nimport ComidaProgresso from '../pages/comida/processo';\nimport BebidaProgresso from '../pages/bebida/processo';\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route path=\"/receitas-favoritas\" component={ ReceitasFavoritas } />\n      <Route path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n      <ContextRoute\n        exact\n        path=\"/perfil\"\n        contextComponent={ GlobalProvider }\n        component={ Perfil }\n      />\n      <Route path=\"/explorar/comidas/area\" component={ ComidaArea } />\n      <Route path=\"/explorar/bebidas/area\" component={ BebidaArea } />\n      <Route path=\"/explorar/comidas/ingredientes\" component={ ComidaIngredientes } />\n      <Route path=\"/explorar/bebidas/ingredientes\" component={ BebidaIngredientes } />\n      <Route path=\"/explorar/comidas\" component={ ExplorarComida } />\n      <Route path=\"/explorar/bebidas\" component={ ExplorarBebida } />\n      <Route path=\"/explorar\" component={ Explorar } />\n      <ContextRoute\n        exact\n        path=\"/bebidas/:idDaReceita/in-progress\"\n        contextComponent={ DrinkProvider }\n        component={ BebidaProgresso }\n      />\n      <ContextRoute\n        exact\n        path=\"/comidas/:idDaReceita/in-progress\"\n        contextComponent={ FoodProvider }\n        component={ ComidaProgresso }\n      />\n      <ContextRoute\n        exact\n        path=\"/bebidas/:idDaReceita\"\n        contextComponent={ DrinkProvider }\n        component={ BebidaDetalhes }\n      />\n      <ContextRoute\n        exact\n        path=\"/comidas/:idDaReceita\"\n        contextComponent={ FoodProvider }\n        component={ ComidaDetalhes }\n      />\n      <ContextRoute\n        exact\n        path=\"/bebidas\"\n        contextComponent={ DrinkProvider }\n        component={ Bebida }\n      />\n      <ContextRoute\n        exact\n        path=\"/comidas\"\n        contextComponent={ FoodProvider }\n        component={ Comida }\n      />\n      <ContextRoute\n        exact\n        path=\"/recipes\"\n        contextComponent={ UserProvider }\n        component={ Login }\n      />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GlobalProvider from './context/globalContext/GlobalProvider';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Routes />\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}